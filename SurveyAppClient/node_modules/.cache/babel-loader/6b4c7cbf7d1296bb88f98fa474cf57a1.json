{"ast":null,"code":"import _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\views\\\\Statistic.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Toolbar, Grid, Paper, Typography, makeStyles } from '@material-ui/core';\nimport AppHeader from \"../components/AppHeader\";\nimport AppDrawer from \"../components/AppDrawer\";\nimport StatisticCard from \"../components/StatisticCard\";\nimport styles from \"../styles/StatisticPageStyle\";\nvar useStyles = makeStyles(styles);\nexport default function Statistic(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var classes = useStyles();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drawerOpen = _useState4[0],\n      setDrawerOpen = _useState4[1];\n\n  var handleDrawerOpen = function handleDrawerOpen(e) {\n    return setDrawerOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose(e) {\n    return setDrawerOpen(false);\n  };\n\n  useEffect(function () {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\n    var init = {\n      method: 'GET',\n      headers: headers\n    };\n    fetch(\"/api/questions/\".concat(props.match.params.survid), init).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setQuestions(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    handleDrawerOpen: handleDrawerOpen,\n    drawerOpen: drawerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppDrawer, {\n    open: drawerOpen,\n    handleDrawerClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Statistic Page of Survey \", props.match.params.survid))), questions ? questions.map(function (q, index) {\n    return /*#__PURE__*/React.createElement(StatisticCard, {\n      qInfo: q,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    });\n  }) : null));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/views/Statistic.js"],"names":["React","useEffect","useState","Toolbar","Grid","Paper","Typography","makeStyles","AppHeader","AppDrawer","StatisticCard","styles","useStyles","Statistic","props","questions","setQuestions","classes","drawerOpen","setDrawerOpen","handleDrawerOpen","e","handleDrawerClose","headers","Headers","append","init","method","fetch","match","params","survid","then","res","json","data","map","q","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Toolbar, Grid, Paper, Typography, makeStyles} from '@material-ui/core';\r\n\r\n\r\nimport AppHeader from \"../components/AppHeader\";\r\nimport AppDrawer from \"../components/AppDrawer\";\r\nimport StatisticCard from \"../components/StatisticCard\";\r\nimport styles from \"../styles/StatisticPageStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Statistic(props) {\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const handleDrawerOpen = (e) => setDrawerOpen(true);\r\n  const handleDrawerClose = e => setDrawerOpen(false);\r\n\r\n  useEffect(() => {\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n    const init = {\r\n      method: 'GET',\r\n      headers: headers\r\n    };\r\n    fetch(`/api/questions/${props.match.params.survid}`, init)\r\n      .then(res => res.json())\r\n      .then(data => setQuestions(data));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      \r\n      <AppHeader handleDrawerOpen={handleDrawerOpen} drawerOpen={drawerOpen} />\r\n      <AppDrawer open={drawerOpen} handleDrawerClose={handleDrawerClose} />\r\n      <Toolbar />\r\n\r\n      <Grid container direction=\"column\" >\r\n        <Grid item>\r\n          <Paper>\r\n            <Typography variant=\"h1\">\r\n              Statistic Page of Survey {props.match.params.survid}\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        {\r\n          questions?\r\n          questions.map((q, index) => (\r\n            <StatisticCard qInfo={q} key={index} />\r\n          )):null\r\n        }\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}