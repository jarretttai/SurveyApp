{"ast":null,"code":"import _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\views\\\\Survey.js\";\nimport React, { useState, useEffect } from 'react';\nimport Question from \"../components/Question\";\nimport { Grid, Typography, Button, Paper } from '@material-ui/core';\nexport default function Survey(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cascade = _useState2[0],\n      setCascade = _useState2[1]; //记录被级联的问题id，在表里的不显示\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldOptions = _useState4[0],\n      setOldOptions = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      questions = _useState6[0],\n      setQuestions = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      answers = _useState8[0],\n      setAnswers = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      setTitle = _useState10[1];\n\n  useEffect(function () {\n    //fetch 获取 title\n    //fetch 获取 respId\n    //fetch 获取 questions\n    //set state of cascade\n    //test: setCascade\n    setCascade([3, 3, 7, 8, 10, 3, 6, 4, 9]); //test: setQuestions\n\n    setQuestions([{\n      formId: 8,\n      qstnId: 1,\n      type: \"mc\",\n      content: \"question 1: multiple choices\",\n      options: [{\n        optId: 1,\n        content: \"option 1\",\n        cascadeQstnId: 3\n      }, {\n        optId: 2,\n        content: \"option 2\",\n        cascadeQstnId: 4\n      }]\n    }, {\n      formId: 8,\n      qstnId: 2,\n      type: \"realNum\",\n      content: \"question 2: real number\",\n      options: []\n    }, {\n      formId: 8,\n      qstnId: 3,\n      type: \"scale\",\n      content: \"question 3: scale\",\n      options: []\n    }, {\n      formId: 8,\n      qstnId: 4,\n      type: \"cb\",\n      content: \"question 4: checkboxes\",\n      options: [{\n        optId: 1,\n        content: \"option 1\",\n        cascadeQstnId: undefined\n      }, {\n        optId: 2,\n        content: \"option 2\",\n        cascadeQstnId: undefined\n      }, {\n        optId: 3,\n        content: \"option 3\",\n        cascadeQstnId: undefined\n      }]\n    }]); //test: setTitle\n\n    setTitle(\"SURVEY 1\");\n  }, []);\n  /**\r\n   * front end test\r\n   */\n\n  console.log(questions);\n\n  var isCascaded = function isCascaded(qstnId) {\n    for (var i = 0; i < cascade.length; i++) {\n      if (cascade[i] === qstnId) return true;\n    }\n\n    return false;\n  };\n\n  var updateOptAnswer = function updateOptAnswer(index, optId) {\n    var ans = {\n      resp_id: 0,\n      form_id: props.match.params.survid,\n      qstn_id: questions[index].qstnId,\n      content: questions[index].options[optId - 1].content\n    };\n    var tempAns = answers.slice();\n    tempAns[index] = ans;\n    setAnswers(tempAns); //test\n\n    console.log(answers); //旧选项如果有级联，则改变后将级联id加回级联状态表\n\n    var cList = cascade.slice();\n\n    if (oldOptions[index]) {\n      var _cId = questions[index].options[oldOptions[index] - 1].cascadeQstnId;\n\n      if (_cId) {\n        cList.unshift(_cId);\n        setCascade(cList);\n      }\n    } //更新旧选项表\n\n\n    var old = oldOptions.slice();\n    old[index] = optId;\n    setOldOptions(old); //新的当前选项如果有级联，则在级联状态表删除掉所有该id\n\n    var cId = questions[index].options[optId - 1].cascadeQstnId;\n\n    if (cId) {\n      for (var i = 0; i < cList.length; i++) {\n        if (cList[i] == cId) {\n          cList.splice(i, 1);\n          --i;\n        }\n      }\n\n      setCascade(cList);\n      console.log(cList);\n    }\n\n    console.log(oldOptions);\n    console.log(cascade);\n  };\n\n  var updateAnswer = function updateAnswer(index, ansCont) {\n    var ans = {\n      resp_id: 0,\n      form_id: props.match.params.survid,\n      qstn_id: questions[index].qstnId,\n      content: ansCont\n    };\n    var tempAns = answers.slice();\n    tempAns[index] = ans;\n    setAnswers(tempAns);\n    console.log(answers);\n  };\n\n  var submitResponse = function submitResponse() {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, title))), questions.map(function (q, index) {\n    if (isCascaded(q.qstnId)) return null;\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      index: index,\n      qInfo: q,\n      updateOptAnswer: updateOptAnswer,\n      update: updateAnswer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: submitResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/views/Survey.js"],"names":["React","useState","useEffect","Question","Grid","Typography","Button","Paper","Survey","props","cascade","setCascade","oldOptions","setOldOptions","questions","setQuestions","answers","setAnswers","title","setTitle","formId","qstnId","type","content","options","optId","cascadeQstnId","undefined","console","log","isCascaded","i","length","updateOptAnswer","index","ans","resp_id","form_id","match","params","survid","qstn_id","tempAns","slice","cList","cId","unshift","old","splice","updateAnswer","ansCont","submitResponse","map","q"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,KAAnC,QAAgD,mBAAhD;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,kBAENR,QAAQ,CAAC,EAAD,CAFF;AAAA;AAAA,MAE7BS,OAF6B;AAAA,MAEpBC,UAFoB,kBAEQ;;;AAFR,mBAGAV,QAAQ,CAAC,EAAD,CAHR;AAAA;AAAA,MAG7BW,UAH6B;AAAA,MAGjBC,aAHiB;;AAAA,mBAIFZ,QAAQ,CAAC,EAAD,CAJN;AAAA;AAAA,MAI7Ba,SAJ6B;AAAA,MAIlBC,YAJkB;;AAAA,mBAKNd,QAAQ,CAAC,EAAD,CALF;AAAA;AAAA,MAK7Be,OAL6B;AAAA,MAKpBC,UALoB;;AAAA,mBAMVhB,QAAQ,CAAC,EAAD,CANE;AAAA;AAAA,MAM7BiB,KAN6B;AAAA,MAMtBC,QANsB;;AAQpCjB,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AACA;AAEA;AACAS,IAAAA,UAAU,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAD,CAAV,CAPc,CAQd;;AACAI,IAAAA,YAAY,CAAC,CACX;AACEK,MAAAA,MAAM,EAAE,CADV;AAEEC,MAAAA,MAAM,EAAE,CAFV;AAGEC,MAAAA,IAAI,EAAE,IAHR;AAIEC,MAAAA,OAAO,EAAE,8BAJX;AAKEC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,CADT;AAEEF,QAAAA,OAAO,EAAE,UAFX;AAGEG,QAAAA,aAAa,EAAE;AAHjB,OADO,EAMP;AACED,QAAAA,KAAK,EAAE,CADT;AAEEF,QAAAA,OAAO,EAAE,UAFX;AAGEG,QAAAA,aAAa,EAAE;AAHjB,OANO;AALX,KADW,EAmBX;AACEN,MAAAA,MAAM,EAAE,CADV;AAEEC,MAAAA,MAAM,EAAE,CAFV;AAGEC,MAAAA,IAAI,EAAE,SAHR;AAIEC,MAAAA,OAAO,EAAE,yBAJX;AAKEC,MAAAA,OAAO,EAAE;AALX,KAnBW,EA0BX;AACEJ,MAAAA,MAAM,EAAE,CADV;AAEEC,MAAAA,MAAM,EAAE,CAFV;AAGEC,MAAAA,IAAI,EAAE,OAHR;AAIEC,MAAAA,OAAO,EAAE,mBAJX;AAKEC,MAAAA,OAAO,EAAE;AALX,KA1BW,EAiCX;AACEJ,MAAAA,MAAM,EAAE,CADV;AAEEC,MAAAA,MAAM,EAAE,CAFV;AAGEC,MAAAA,IAAI,EAAE,IAHR;AAIEC,MAAAA,OAAO,EAAE,wBAJX;AAKEC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,CADT;AAEEF,QAAAA,OAAO,EAAE,UAFX;AAGEG,QAAAA,aAAa,EAAEC;AAHjB,OADO,EAMP;AACEF,QAAAA,KAAK,EAAE,CADT;AAEEF,QAAAA,OAAO,EAAE,UAFX;AAGEG,QAAAA,aAAa,EAAEC;AAHjB,OANO,EAWP;AACEF,QAAAA,KAAK,EAAE,CADT;AAEEF,QAAAA,OAAO,EAAE,UAFX;AAGEG,QAAAA,aAAa,EAAEC;AAHjB,OAXO;AALX,KAjCW,CAAD,CAAZ,CATc,CAkEd;;AACAR,IAAAA,QAAQ,CAAC,UAAD,CAAR;AAED,GArEQ,EAqEN,EArEM,CAAT;AAuEA;;;;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;;AAGA,MAAMgB,UAAU,GAAG,SAAbA,UAAa,CAAAT,MAAM,EAAI;AAC3B,SAAK,IAAIU,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACrB,OAAO,CAACsB,MAAxB,EAAgCD,CAAC,EAAjC;AACE,UAAIrB,OAAO,CAACqB,CAAD,CAAP,KAAaV,MAAjB,EAAyB,OAAO,IAAP;AAD3B;;AAEA,WAAO,KAAP;AACD,GAJD;;AAMA,MAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQT,KAAR,EAAkB;AAExC,QAAMU,GAAG,GAAG;AACVC,MAAAA,OAAO,EAAE,CADC;AAEVC,MAAAA,OAAO,EAAE5B,KAAK,CAAC6B,KAAN,CAAYC,MAAZ,CAAmBC,MAFlB;AAGVC,MAAAA,OAAO,EAAE3B,SAAS,CAACoB,KAAD,CAAT,CAAiBb,MAHhB;AAIVE,MAAAA,OAAO,EAAET,SAAS,CAACoB,KAAD,CAAT,CAAiBV,OAAjB,CAAyBC,KAAK,GAAC,CAA/B,EAAkCF;AAJjC,KAAZ;AAMA,QAAImB,OAAO,GAAG1B,OAAO,CAAC2B,KAAR,EAAd;AACAD,IAAAA,OAAO,CAACR,KAAD,CAAP,GAAiBC,GAAjB;AACAlB,IAAAA,UAAU,CAACyB,OAAD,CAAV,CAVwC,CAWxC;;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ,EAZwC,CAcxC;;AACA,QAAI4B,KAAK,GAAGlC,OAAO,CAACiC,KAAR,EAAZ;;AACA,QAAI/B,UAAU,CAACsB,KAAD,CAAd,EAAuB;AACrB,UAAIW,IAAG,GAAG/B,SAAS,CAACoB,KAAD,CAAT,CAAiBV,OAAjB,CAAyBZ,UAAU,CAACsB,KAAD,CAAV,GAAkB,CAA3C,EAA8CR,aAAxD;;AACA,UAAImB,IAAJ,EAAS;AACPD,QAAAA,KAAK,CAACE,OAAN,CAAcD,IAAd;AACAlC,QAAAA,UAAU,CAACiC,KAAD,CAAV;AACD;AACF,KAtBuC,CAwBxC;;;AACA,QAAIG,GAAG,GAAGnC,UAAU,CAAC+B,KAAX,EAAV;AACAI,IAAAA,GAAG,CAACb,KAAD,CAAH,GAAaT,KAAb;AACAZ,IAAAA,aAAa,CAACkC,GAAD,CAAb,CA3BwC,CA6BxC;;AACA,QAAIF,GAAG,GAAG/B,SAAS,CAACoB,KAAD,CAAT,CAAiBV,OAAjB,CAAyBC,KAAK,GAAC,CAA/B,EAAkCC,aAA5C;;AACA,QAAImB,GAAJ,EAAS;AACP,WAAK,IAAId,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACa,KAAK,CAACZ,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,YAAIa,KAAK,CAACb,CAAD,CAAL,IAAYc,GAAhB,EAAqB;AACnBD,UAAAA,KAAK,CAACI,MAAN,CAAajB,CAAb,EAAgB,CAAhB;AACA,YAAEA,CAAF;AACD;AACF;;AACDpB,MAAAA,UAAU,CAACiC,KAAD,CAAV;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACD;;AACDhB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACD,GA3CD;;AA6CA,MAAMuC,YAAY,GAAG,SAAfA,YAAe,CAACf,KAAD,EAAQgB,OAAR,EAAoB;AACvC,QAAMf,GAAG,GAAG;AACVC,MAAAA,OAAO,EAAE,CADC;AAEVC,MAAAA,OAAO,EAAE5B,KAAK,CAAC6B,KAAN,CAAYC,MAAZ,CAAmBC,MAFlB;AAGVC,MAAAA,OAAO,EAAE3B,SAAS,CAACoB,KAAD,CAAT,CAAiBb,MAHhB;AAIVE,MAAAA,OAAO,EAAE2B;AAJC,KAAZ;AAMA,QAAIR,OAAO,GAAG1B,OAAO,CAAC2B,KAAR,EAAd;AACAD,IAAAA,OAAO,CAACR,KAAD,CAAP,GAAiBC,GAAjB;AACAlB,IAAAA,UAAU,CAACyB,OAAD,CAAV;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACD,GAXD;;AAaA,MAAMmC,cAAc,GAAG,SAAjBA,cAAiB,GAAM,CAAE,CAA/B;;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,UAAU,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,KADH,CADF,CADF,CADF,EASIJ,SAAS,CAACsC,GAAV,CAAc,UAACC,CAAD,EAAInB,KAAJ,EAAc;AAC1B,QAAIJ,UAAU,CAACuB,CAAC,CAAChC,MAAH,CAAd,EAA0B,OAAO,IAAP;AAC1B,wBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEa,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACA,MAAA,KAAK,EAAEA,KADP;AAEA,MAAA,KAAK,EAAImB,CAFT;AAGA,MAAA,eAAe,EAAIpB,eAHnB;AAIA,MAAA,MAAM,EAAIgB,YAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD,GAXD,CATJ,eAsBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACA,IAAA,OAAO,EAAG,WADV;AAEA,IAAA,KAAK,EAAG,SAFR;AAGA,IAAA,OAAO,EAAIE,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAtBF,CADF,CADF;AAoCD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Question from \"../components/Question\";\r\nimport { Grid, Typography, Button, Paper } from '@material-ui/core';\r\n\r\nexport default function Survey(props) {\r\n\r\n  const [cascade, setCascade] = useState([]); //记录被级联的问题id，在表里的不显示\r\n  const [oldOptions, setOldOptions] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //fetch 获取 title\r\n    //fetch 获取 respId\r\n    //fetch 获取 questions\r\n    //set state of cascade\r\n\r\n    //test: setCascade\r\n    setCascade([3, 3, 7, 8, 10, 3, 6, 4, 9]);\r\n    //test: setQuestions\r\n    setQuestions([\r\n      {\r\n        formId: 8,\r\n        qstnId: 1,\r\n        type: \"mc\",\r\n        content: \"question 1: multiple choices\",\r\n        options: [\r\n          {\r\n            optId: 1,\r\n            content: \"option 1\",\r\n            cascadeQstnId: 3\r\n          },\r\n          {\r\n            optId: 2,\r\n            content: \"option 2\",\r\n            cascadeQstnId: 4\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        formId: 8,\r\n        qstnId: 2,\r\n        type: \"realNum\",\r\n        content: \"question 2: real number\",\r\n        options: []\r\n      },\r\n      {\r\n        formId: 8,\r\n        qstnId: 3,\r\n        type: \"scale\",\r\n        content: \"question 3: scale\",\r\n        options: []\r\n      },\r\n      {\r\n        formId: 8,\r\n        qstnId: 4,\r\n        type: \"cb\",\r\n        content: \"question 4: checkboxes\",\r\n        options: [\r\n          {\r\n            optId: 1,\r\n            content: \"option 1\",\r\n            cascadeQstnId: undefined\r\n          },\r\n          {\r\n            optId: 2,\r\n            content: \"option 2\",\r\n            cascadeQstnId: undefined\r\n          },\r\n          {\r\n            optId: 3,\r\n            content: \"option 3\",\r\n            cascadeQstnId: undefined\r\n          }\r\n        ]\r\n      }\r\n    ]);\r\n    //test: setTitle\r\n    setTitle(\"SURVEY 1\");\r\n\r\n  }, []);\r\n\r\n  /**\r\n   * front end test\r\n   */\r\n  console.log(questions);\r\n  \r\n\r\n  const isCascaded = qstnId => {\r\n    for (let i=0; i<cascade.length; i++)\r\n      if (cascade[i]===qstnId) return true;\r\n    return false;\r\n  }\r\n\r\n  const updateOptAnswer = (index, optId) => {\r\n\r\n    const ans = {\r\n      resp_id: 0,\r\n      form_id: props.match.params.survid,\r\n      qstn_id: questions[index].qstnId,\r\n      content: questions[index].options[optId-1].content\r\n    };\r\n    let tempAns = answers.slice();\r\n    tempAns[index] = ans;\r\n    setAnswers(tempAns);\r\n    //test\r\n    console.log(answers);\r\n\r\n    //旧选项如果有级联，则改变后将级联id加回级联状态表\r\n    let cList = cascade.slice();\r\n    if (oldOptions[index]) {\r\n      let cId = questions[index].options[oldOptions[index]-1].cascadeQstnId;\r\n      if (cId) {\r\n        cList.unshift(cId);\r\n        setCascade(cList);\r\n      }\r\n    }\r\n\r\n    //更新旧选项表\r\n    let old = oldOptions.slice();\r\n    old[index] = optId;\r\n    setOldOptions(old);\r\n\r\n    //新的当前选项如果有级联，则在级联状态表删除掉所有该id\r\n    let cId = questions[index].options[optId-1].cascadeQstnId;\r\n    if (cId) {   \r\n      for (let i=0; i<cList.length; i++) {\r\n        if (cList[i] == cId) {\r\n          cList.splice(i, 1);\r\n          --i;\r\n        }\r\n      }\r\n      setCascade(cList);\r\n      console.log(cList);\r\n    }\r\n    console.log(oldOptions);\r\n    console.log(cascade);\r\n  }\r\n\r\n  const updateAnswer = (index, ansCont) => {\r\n    const ans = {\r\n      resp_id: 0,\r\n      form_id: props.match.params.survid,\r\n      qstn_id: questions[index].qstnId,\r\n      content: ansCont\r\n    };\r\n    let tempAns = answers.slice();\r\n    tempAns[index] = ans;\r\n    setAnswers(tempAns);\r\n    console.log(answers);\r\n  }\r\n\r\n  const submitResponse = () => {}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container direction=\"column\" alignItems=\"center\" >\r\n        <Grid item>\r\n          <Paper>\r\n            <Typography>\r\n              {title}\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        {\r\n          questions.map((q, index) => {\r\n            if (isCascaded(q.qstnId)) return null;\r\n            return (\r\n              <Grid item key={index}>\r\n                <Question \r\n                index={index}\r\n                qInfo = {q}\r\n                updateOptAnswer = {updateOptAnswer}\r\n                update = {updateAnswer} />\r\n              </Grid>\r\n            );\r\n          })\r\n        }\r\n        <Grid item>\r\n          <Button\r\n          variant = \"contained\"\r\n          color = \"primary\"\r\n          onClick = {submitResponse} >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}