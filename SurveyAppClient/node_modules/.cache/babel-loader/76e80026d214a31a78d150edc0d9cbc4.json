{"ast":null,"code":"var _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\Question.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport styles from \"../styles/QuestionStyle\";\nvar useStyles = makeStyles(styles); //multi choices\n\nfunction mcQuestions(content, options) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"mcQuestions\");\n}\n\nfunction cbQuestions(content, options) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"cbQuestions\");\n}\n\nfunction textQuestions(content, options) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"textQuestions\");\n}\n\nfunction numQuestions(content, options) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"numQuestions\");\n}\n\nfunction scaleQuestions(content, options) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"scaleQuestions\");\n}\n\nexport default function Question(props) {\n  var classes = useStyles();\n  console.log(props.qInfo);\n\n  var question = function question() {\n    if (props.qInfo.type == 'mcq') mcQuestions();else if (props.qInfo.type == 'cb') cbQuestions();else if (props.qInfo.type == 'text') textQuestions();else if (props.qInfo.type == 'num') numQuestions();else if (props.qInfo.type == 'scale') scaleQuestions();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, question);\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/Question.js"],"names":["React","makeStyles","styles","useStyles","mcQuestions","content","options","cbQuestions","textQuestions","numQuestions","scaleQuestions","Question","props","classes","console","log","qInfo","question","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAGA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,IAAMC,SAAS,GAAGF,UAAU,CAACC,MAAD,CAA5B,C,CAIA;;AACA,SAASE,WAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;AACtC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAGD;;AAED,SAASC,WAAT,CAAsBF,OAAtB,EAA+BC,OAA/B,EAAwC;AACtC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAGD;;AAED,SAASE,aAAT,CAAwBH,OAAxB,EAAiCC,OAAjC,EAA0C;AACxC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAGD;;AAED,SAASG,YAAT,CAAuBJ,OAAvB,EAAgCC,OAAhC,EAAyC;AACvC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;;AAED,SAASI,cAAT,CAAyBL,OAAzB,EAAkCC,OAAlC,EAA2C;AACzC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD;;AAED,eAAe,SAASK,QAAT,CAAkBC,KAAlB,EAAyB;AAEtC,MAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAlB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIL,KAAK,CAACI,KAAN,CAAYE,IAAZ,IAAkB,KAAtB,EAA6Bd,WAAW,GAAxC,KACK,IAAIQ,KAAK,CAACI,KAAN,CAAYE,IAAZ,IAAkB,IAAtB,EAA4BX,WAAW,GAAvC,KACA,IAAIK,KAAK,CAACI,KAAN,CAAYE,IAAZ,IAAkB,MAAtB,EAA8BV,aAAa,GAA3C,KACA,IAAII,KAAK,CAACI,KAAN,CAAYE,IAAZ,IAAkB,KAAtB,EAA6BT,YAAY,GAAzC,KACA,IAAIG,KAAK,CAACI,KAAN,CAAYE,IAAZ,IAAkB,OAAtB,EAA+BR,cAAc;AACnD,GAND;;AAQA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIO,QAFJ,CADF;AAQD","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\n\r\n//multi choices\r\nfunction mcQuestions (content, options) {\r\n  return (\r\n    <h1>mcQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction cbQuestions (content, options) {\r\n  return (\r\n    <h1>cbQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction textQuestions (content, options) {\r\n  return (\r\n    <h1>textQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction numQuestions (content, options) {\r\n  return (\r\n    <h1>numQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction scaleQuestions (content, options) {\r\n  return (\r\n    <h1>scaleQuestions</h1>\r\n  )\r\n}\r\n\r\nexport default function Question(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(props.qInfo);\r\n\r\n  const question = () => {\r\n    if (props.qInfo.type=='mcq') mcQuestions();\r\n    else if (props.qInfo.type=='cb') cbQuestions();\r\n    else if (props.qInfo.type=='text') textQuestions();\r\n    else if (props.qInfo.type=='num') numQuestions();\r\n    else if (props.qInfo.type=='scale') scaleQuestions();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      { question }\r\n        \r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}