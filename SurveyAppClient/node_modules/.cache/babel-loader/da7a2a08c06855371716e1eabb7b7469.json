{"ast":null,"code":"import _objectSpread from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyAppClient\\\\src\\\\views\\\\Signup.js\";\nimport React, { useState } from \"react\";\nimport { Button, Grid, Paper, Typography, Link } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\nimport styles from \"../styles/SignFormStyle\";\nvar useStyles = makeStyles(styles);\n\nfunction Signup(props) {\n  var classes = useStyles();\n  var errObj = {\n    emailEmpty: false,\n    emailError: false,\n    pwdError: false,\n    pwdRepeatError: false\n  };\n\n  var _useState = useState(errObj),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pwd = _useState6[0],\n      setPwd = _useState6[1];\n\n  var validateAndUpdateEmail = function validateAndUpdateEmail(e) {\n    if (e.target.value === \"\") {\n      //empty\n      var emailEmpty = error.emailEmpty,\n          others = _objectWithoutProperties(error, [\"emailEmpty\"]);\n\n      emailEmpty = true;\n      setError(_objectSpread({\n        emailEmpty: emailEmpty\n      }, others));\n    } else {\n      var regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      var _emailEmpty = error.emailEmpty,\n          emailError = error.emailError,\n          _others = _objectWithoutProperties(error, [\"emailEmpty\", \"emailError\"]);\n\n      if (!regex.test(e.target.value)) {\n        //invalid input\n        emailError = true;\n        _emailEmpty = false;\n        setError(_objectSpread({\n          emailEmpty: _emailEmpty,\n          emailError: emailError\n        }, _others));\n      } else {\n        //no error\n        emailError = false;\n        _emailEmpty = false;\n        setError(_objectSpread({\n          emailEmpty: _emailEmpty,\n          emailError: emailError\n        }, _others));\n      }\n    }\n\n    setEmail(e.target.value); //update email\n  };\n\n  var emailHelperText = function emailHelperText() {\n    if (error.emailEmpty) {\n      return \"Please enter an email address\";\n    } else if (error.emailError) {\n      return \"Please input correct email address\";\n    } else {\n      return \"\";\n    }\n  };\n\n  var validateAndUpdatePwd = function validateAndUpdatePwd(e) {\n    if (e.target.value.length < 6) {\n      var pwdEmpty = error.pwdEmpty,\n          others = _objectWithoutProperties(error, [\"pwdEmpty\"]);\n\n      pwdEmpty = true;\n      setError(_objectSpread({\n        pwdEmpty: pwdEmpty\n      }, others));\n    } else {\n      //No error\n      var _pwdEmpty = error.pwdEmpty,\n          pwdError = error.pwdError,\n          _others2 = _objectWithoutProperties(error, [\"pwdEmpty\", \"pwdError\"]);\n\n      pwdError = false;\n      _pwdEmpty = false;\n      setError(_objectSpread({\n        pwdEmpty: _pwdEmpty,\n        pwdError: pwdError\n      }, _others2));\n    }\n\n    setPwd(e.target.value); //Update Password\n  };\n\n  var pwdHelperText = function pwdHelperText() {\n    if (error.pwdError) {\n      return \"Your password should be longer than 6 characters\";\n    } // else {\n    //   return \"\";\n    // }\n\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(e);\n    console.log(email);\n    console.log(pwd);\n    props.history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 10,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    className: classes.formHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EmojiPeopleRoundedIcon, {\n    color: \"primary\",\n    style: {\n      fontSize: 48\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Sign up\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    href: \"/login\",\n    underline: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Sign in here\")))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"signup-uname\",\n    label: \"Username\",\n    helperText: \"\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"signup-email\",\n    label: \"Email\",\n    helperText: emailHelperText(),\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    onBlur: validateAndUpdateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"signup-pwd\",\n    type: \"password\",\n    label: \"Password\",\n    helperText: pwdHelperText(),\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    onBlur: validateAndUpdatePwd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"signup-pwd-rpt\",\n    type: \"password\",\n    label: \"Repeat Password\",\n    helperText: \"\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    fullWidth: true,\n    type: \"submit\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Sign Up\")))));\n}\n\nexport default Signup;","map":{"version":3,"sources":["D:/src/SurveyAppClient/src/views/Signup.js"],"names":["React","useState","Button","Grid","Paper","Typography","Link","TextField","makeStyles","EmojiPeopleRoundedIcon","styles","useStyles","Signup","props","classes","errObj","emailEmpty","emailError","pwdError","pwdRepeatError","error","setError","email","setEmail","pwd","setPwd","validateAndUpdateEmail","e","target","value","others","regex","test","emailHelperText","validateAndUpdatePwd","length","pwdEmpty","pwdHelperText","handleSubmit","preventDefault","console","log","history","push","minHeight","paper","formHeader","fontSize","form","button"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,EAA0CC,IAA1C,QAAsD,mBAAtD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAACE,MAAD,CAA5B;;AAEA,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;AAErB,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,MAAMI,MAAM,GAAG;AACbC,IAAAA,UAAU,EAAE,KADC;AAEbC,IAAAA,UAAU,EAAE,KAFC;AAGbC,IAAAA,QAAQ,EAAE,KAHG;AAIbC,IAAAA,cAAc,EAAE;AAJH,GAAf;;AAHqB,kBASKlB,QAAQ,CAACc,MAAD,CATb;AAAA;AAAA,MASdK,KATc;AAAA,MASPC,QATO;;AAAA,mBAUKpB,QAAQ,EAVb;AAAA;AAAA,MAUdqB,KAVc;AAAA,MAUPC,QAVO;;AAAA,mBAWCtB,QAAQ,EAXT;AAAA;AAAA,MAWduB,GAXc;AAAA,MAWTC,MAXS;;AAarB,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,CAAD,EAAO;AACpC,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAiB,EAArB,EAAyB;AAAG;AAAH,UAClBb,UADkB,GACOI,KADP,CAClBJ,UADkB;AAAA,UACHc,MADG,4BACOV,KADP;;AAEvBJ,MAAAA,UAAU,GAAG,IAAb;AACAK,MAAAA,QAAQ;AAAEL,QAAAA,UAAU,EAAVA;AAAF,SAAiBc,MAAjB,EAAR;AACD,KAJD,MAKK;AACH,UAAMC,KAAK,GAAG,sJAAd;;AADG,UAEEf,WAFF,GAEuCI,KAFvC,CAEEJ,UAFF;AAAA,UAEcC,UAFd,GAEuCG,KAFvC,CAEcH,UAFd;AAAA,UAE6Ba,OAF7B,4BAEuCV,KAFvC;;AAGH,UAAI,CAACW,KAAK,CAACC,IAAN,CAAWL,CAAC,CAACC,MAAF,CAASC,KAApB,CAAL,EAAiC;AAAG;AAClCZ,QAAAA,UAAU,GAAG,IAAb;AAAoBD,QAAAA,WAAU,GAAG,KAAb;AACpBK,QAAAA,QAAQ;AAAEL,UAAAA,UAAU,EAAVA,WAAF;AAAcC,UAAAA,UAAU,EAAVA;AAAd,WAA6Ba,OAA7B,EAAR;AACD,OAHD,MAIK;AAAG;AACNb,QAAAA,UAAU,GAAG,KAAb;AAAoBD,QAAAA,WAAU,GAAG,KAAb;AACpBK,QAAAA,QAAQ;AAAEL,UAAAA,UAAU,EAAVA,WAAF;AAAcC,UAAAA,UAAU,EAAVA;AAAd,WAA6Ba,OAA7B,EAAR;AACD;AACF;;AACDP,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CAlBoC,CAkBV;AAC3B,GAnBD;;AAqBA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIb,KAAK,CAACJ,UAAV,EAAsB;AACpB,aAAO,+BAAP;AACD,KAFD,MAGK,IAAII,KAAK,CAACH,UAAV,EAAsB;AACzB,aAAO,oCAAP;AACD,KAFI,MAGA;AACH,aAAO,EAAP;AACD;AACF,GAVD;;AAYA,MAAMiB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,CAAD,EAAO;AAClC,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeM,MAAf,GAAwB,CAA5B,EAA+B;AAAA,UACxBC,QADwB,GACDhB,KADC,CACxBgB,QADwB;AAAA,UACXN,MADW,4BACDV,KADC;;AAE7BgB,MAAAA,QAAQ,GAAG,IAAX;AACAf,MAAAA,QAAQ;AAAEe,QAAAA,QAAQ,EAARA;AAAF,SAAeN,MAAf,EAAR;AACD,KAJD,MAIO;AACL;AADK,UAEAM,SAFA,GAEiChB,KAFjC,CAEAgB,QAFA;AAAA,UAEUlB,QAFV,GAEiCE,KAFjC,CAEUF,QAFV;AAAA,UAEuBY,QAFvB,4BAEiCV,KAFjC;;AAGLF,MAAAA,QAAQ,GAAG,KAAX;AACAkB,MAAAA,SAAQ,GAAG,KAAX;AACAf,MAAAA,QAAQ;AAAEe,QAAAA,QAAQ,EAARA,SAAF;AAAYlB,QAAAA,QAAQ,EAARA;AAAZ,SAAyBY,QAAzB,EAAR;AACD;;AACDL,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,CAZkC,CAYV;AACzB,GAbD;;AAeA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIjB,KAAK,CAACF,QAAV,EAAoB;AAClB,aAAO,kDAAP;AACD,KAHyB,CAI1B;AACA;AACA;;AACD,GAPD;;AASA,MAAMoB,YAAY,GAAG,SAAfA,YAAe,CAACX,CAAD,EAAO;AAE1BA,IAAAA,CAAC,CAACY,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,CAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ;AAEAX,IAAAA,KAAK,CAAC6B,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AAED,GAVD;;AAYA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,UAAU,EAAC,QAA5C;AAAqD,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE9B,OAAO,CAAC+B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAE,CALX;AAME,IAAA,SAAS,EAAE/B,OAAO,CAACgC,UANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAwC,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAXF,eAcE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,2BADH,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,SAAS,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CAdF,CAFF,eA0BE;AAAM,IAAA,SAAS,EAAEjC,OAAO,CAACkC,IAAzB;AAA+B,IAAA,QAAQ,EAAEV,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,UAAU,EAAC,EAHb;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,UAAU,EAAEL,eAAe,EAH7B;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,MAAM,EAAEP,sBARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAqBE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,UAAU,EAAEW,aAAa,EAJ3B;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,MAAM,EAAC,QANT;AAOE,IAAA,IAAI,EAAC,QAPP;AAQE,IAAA,SAAS,MARX;AASE,IAAA,MAAM,EAAEH,oBATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,eAgCE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,iBAHR;AAIE,IAAA,UAAU,EAAC,EAJb;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,MAAM,EAAC,QANT;AAOE,IAAA,IAAI,EAAC,QAPP;AAQE,IAAA,SAAS,MARX;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,eA2CE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,SAAS,EAAEpB,OAAO,CAACmC,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3CF,CA1BF,CADF,CADF,CADF;AAuFD;;AAED,eAAerC,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Grid, Paper, Typography, Link } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EmojiPeopleRoundedIcon from '@material-ui/icons/EmojiPeopleRounded';\r\n\r\nimport styles from \"../styles/SignFormStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction Signup(props) {\r\n\r\n  const classes = useStyles();\r\n  const errObj = {\r\n    emailEmpty: false,  \r\n    emailError: false, \r\n    pwdError: false,\r\n    pwdRepeatError: false,\r\n  }\r\n  const [error, setError] = useState(errObj);\r\n  const [email, setEmail] = useState();\r\n  const [pwd, setPwd] = useState();\r\n\r\n  const validateAndUpdateEmail = (e) => {\r\n    if (e.target.value===\"\") {  //empty\r\n      let {emailEmpty, ...others} = error;\r\n      emailEmpty = true;\r\n      setError({emailEmpty, ...others});\r\n    } \r\n    else {\r\n      const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      let {emailEmpty, emailError, ...others} = error;\r\n      if (!regex.test(e.target.value)) {  //invalid input\r\n        emailError = true;  emailEmpty = false;\r\n        setError({emailEmpty, emailError, ...others});\r\n      } \r\n      else {  //no error\r\n        emailError = false; emailEmpty = false;\r\n        setError({emailEmpty, emailError, ...others});\r\n      }\r\n    }\r\n    setEmail(e.target.value); //update email\r\n  }\r\n\r\n  const emailHelperText = () => {\r\n    if (error.emailEmpty) {\r\n      return \"Please enter an email address\"\r\n    } \r\n    else if (error.emailError) {\r\n      return \"Please input correct email address\"\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  const validateAndUpdatePwd = (e) => {\r\n    if (e.target.value.length < 6) {\r\n      let {pwdEmpty, ...others} = error;\r\n      pwdEmpty = true;\r\n      setError({pwdEmpty, ...others});\r\n    } else {\r\n      //No error\r\n      let {pwdEmpty, pwdError, ...others} = error;\r\n      pwdError = false;\r\n      pwdEmpty = false;\r\n      setError({pwdEmpty, pwdError, ...others});     \r\n    }\r\n    setPwd(e.target.value); //Update Password\r\n  }\r\n\r\n  const pwdHelperText = () => {\r\n    if (error.pwdError) {\r\n      return \"Your password should be longer than 6 characters\"\r\n    }\r\n    // else {\r\n    //   return \"\";\r\n    // }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(e);\r\n    console.log(email);\r\n    console.log(pwd);\r\n\r\n    props.history.push(\"/login\");\r\n\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\r\n      <Grid item sm={10} md={6} lg={3}>\r\n        <Paper className={classes.paper}>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            className={classes.formHeader}\r\n          >\r\n            <Grid item>\r\n              <EmojiPeopleRoundedIcon color=\"primary\" style={{ fontSize: 48 }}/>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Sign up</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">\r\n                {\"Already have an account? \"}\r\n                <Link href=\"/login\" underline=\"always\">\r\n                  Sign in here\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              id=\"signup-uname\"\r\n              label=\"Username\"\r\n              helperText=\"\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              required\r\n            />\r\n            <TextField\r\n              id=\"signup-email\"\r\n              label=\"Email\"\r\n              helperText={emailHelperText()}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              onBlur={validateAndUpdateEmail}\r\n            />\r\n            <TextField\r\n              id=\"signup-pwd\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              helperText={pwdHelperText()}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              onBlur={validateAndUpdatePwd}\r\n            />\r\n            <TextField\r\n              id=\"signup-pwd-rpt\"\r\n              type=\"password\"\r\n              label=\"Repeat Password\"\r\n              helperText=\"\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              required\r\n            />\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              size=\"medium\" \r\n              fullWidth\r\n              type=\"submit\" \r\n              className={classes.button}>\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}