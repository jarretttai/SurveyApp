{"ast":null,"code":"import _objectSpread from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyAppClient\\\\src\\\\views\\\\Login.js\";\nimport React from \"react\";\nimport { Button, Grid, Paper, Typography, Link } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { useState } from \"react\";\nimport styles from \"../styles/SignFormStyle\";\nvar useStyles = makeStyles(styles);\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  var _useState = useState({\n    emailEmpty: false,\n    pwdEmpty: false,\n    emailError: false,\n    pwdError: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pwd = _useState6[0],\n      setPwd = _useState6[1];\n\n  var validateAndUpdateEmail = function validateAndUpdateEmail(e) {\n    if (e.target.value === \"\") {\n      //empty\n      var emailEmpty = error.emailEmpty,\n          others = _objectWithoutProperties(error, [\"emailEmpty\"]);\n\n      emailEmpty = true;\n      setError(_objectSpread({\n        emailEmpty: emailEmpty\n      }, others));\n    } else {\n      var regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      var _emailEmpty = error.emailEmpty,\n          emailError = error.emailError,\n          _others = _objectWithoutProperties(error, [\"emailEmpty\", \"emailError\"]);\n\n      if (!regex.test(e.target.value)) {\n        //invalid input\n        emailError = true;\n        _emailEmpty = false;\n        setError(_objectSpread({\n          emailEmpty: _emailEmpty,\n          emailError: emailError\n        }, _others));\n      } else {\n        //no error\n        emailError = false;\n        _emailEmpty = false;\n        setError(_objectSpread({\n          emailEmpty: _emailEmpty,\n          emailError: emailError\n        }, _others));\n      }\n    }\n\n    setEmail(e.target.value); //update email\n  };\n\n  var emailHelperText = function emailHelperText() {\n    if (error.emailEmpty) {\n      return \"Email address can't be empty\";\n    } else if (error.emailError) {\n      return \"Please input correct email address\";\n    } else {\n      return \"\";\n    }\n  };\n\n  var validateAndUpdatePwd = function validateAndUpdatePwd(e) {\n    if (e.target.value === \"\") {\n      var pwdEmpty = error.pwdEmpty,\n          others = _objectWithoutProperties(error, [\"pwdEmpty\"]);\n\n      pwdEmpty = true;\n      setError(_objectSpread({\n        pwdEmpty: pwdEmpty\n      }, others));\n    } else {\n      //No error\n      var _pwdEmpty = error.pwdEmpty,\n          pwdError = error.pwdError,\n          _others2 = _objectWithoutProperties(error, [\"pwdEmpty\", \"pwdError\"]);\n\n      pwdError = false;\n      _pwdEmpty = false;\n      setError(_objectSpread({\n        pwdEmpty: _pwdEmpty,\n        pwdError: pwdError\n      }, _others2));\n    }\n\n    setPwd(e.target.value); //Update Password\n  };\n\n  var pwdHelperText = function pwdHelperText() {\n    if (error.pwdEmpty) {\n      return \"Password can't be empty\";\n    } else if (error.pwdError) {\n      return \"Wrong password or email address\";\n    } else {\n      return \"\";\n    }\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    console.log(e);\n    console.log(email);\n    console.log(pwd);\n    props.history.push(\"/\");\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 10,\n    md: 5,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    className: classes.formHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccountCircleIcon, {\n    color: \"primary\",\n    style: {\n      fontSize: 48\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Sign in\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"No account yet? \", /*#__PURE__*/React.createElement(Link, {\n    href: \"/signup\",\n    underline: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Sign up here\")))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"signin-email\",\n    type: \"text\",\n    label: \"Email\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    onBlur: validateAndUpdateEmail,\n    error: error.emailEmpty || error.emailError,\n    helperText: emailHelperText(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"signin-pwd\",\n    type: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    onBlur: validateAndUpdatePwd,\n    error: error.pwdEmpty || error.pwdError,\n    helperText: pwdHelperText(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.button,\n    type: \"submit\",\n    onSubmit: handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"/\",\n    underline: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Forgot password?\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/src/SurveyAppClient/src/views/Login.js"],"names":["React","Button","Grid","Paper","Typography","Link","TextField","makeStyles","AccountCircleIcon","useState","styles","useStyles","Login","props","classes","emailEmpty","pwdEmpty","emailError","pwdError","error","setError","email","setEmail","pwd","setPwd","validateAndUpdateEmail","e","target","value","others","regex","test","emailHelperText","validateAndUpdatePwd","pwdHelperText","handleSubmit","console","log","history","push","event","stopPropagation","minHeight","paper","formHeader","fontSize","form","button"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Grid, Paper, Typography, Link } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { useState } from \"react\";\r\n\r\nimport styles from \"../styles/SignFormStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState({emailEmpty: false, pwdEmpty: false, emailError: false, pwdError: false});\r\n  const [email, setEmail] = useState();\r\n  const [pwd, setPwd] = useState();\r\n\r\n  const validateAndUpdateEmail = (e) => {\r\n    if (e.target.value===\"\") {  //empty\r\n      let {emailEmpty, ...others} = error;\r\n      emailEmpty = true;\r\n      setError({emailEmpty, ...others});\r\n    } else {\r\n      const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      let {emailEmpty, emailError, ...others} = error;\r\n      if (!regex.test(e.target.value)) {  //invalid input\r\n        emailError = true;\r\n        emailEmpty = false;\r\n        setError({emailEmpty, emailError, ...others});\r\n      } else {  //no error\r\n        emailError = false;\r\n        emailEmpty = false;\r\n        setError({emailEmpty, emailError, ...others});\r\n      }\r\n    }\r\n    setEmail(e.target.value); //update email\r\n  }\r\n\r\n  const emailHelperText = () => {\r\n    if (error.emailEmpty) {\r\n      return \"Email address can't be empty\"\r\n    } \r\n    else if (error.emailError) {\r\n      return \"Please input correct email address\"\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  const validateAndUpdatePwd = (e) => {\r\n    if (e.target.value===\"\") {\r\n      let {pwdEmpty, ...others} = error;\r\n      pwdEmpty = true;\r\n      setError({pwdEmpty, ...others});\r\n    } else {\r\n      //No error\r\n      let {pwdEmpty, pwdError, ...others} = error;\r\n      pwdError = false;\r\n      pwdEmpty = false;\r\n      setError({pwdEmpty, pwdError, ...others});      \r\n    }\r\n    setPwd(e.target.value); //Update Password\r\n  }\r\n\r\n  const pwdHelperText = () => {\r\n    if (error.pwdEmpty) {\r\n      return \"Password can't be empty\"\r\n    }\r\n    else if (error.pwdError) {\r\n      return \"Wrong password or email address\"\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    console.log(e);\r\n    console.log(email);\r\n    console.log(pwd);\r\n\r\n    props.history.push(\"/\");\r\n\r\n    event. stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\r\n      <Grid item sm={10} md={5} lg={3}>\r\n        <Paper className={classes.paper} elevation={3}>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            className={classes.formHeader}\r\n          >\r\n            <Grid item>\r\n              <AccountCircleIcon color=\"primary\" style={{ fontSize: 48 }}/>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Sign in</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">\r\n                {\"No account yet? \"}\r\n                <Link href=\"/signup\" underline=\"always\">\r\n                  Sign up here\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <form className={classes.form}>\r\n            <TextField\r\n              id=\"signin-email\"\r\n              type=\"text\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              onBlur={validateAndUpdateEmail}\r\n              error={error.emailEmpty||error.emailError}\r\n              helperText={ emailHelperText() }\r\n            />\r\n            <TextField\r\n              id=\"signin-pwd\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              onBlur={validateAndUpdatePwd}\r\n              error={error.pwdEmpty||error.pwdError}\r\n              helperText={ pwdHelperText() }\r\n            />\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              fullWidth \r\n              className={classes.button}\r\n              type=\"submit\"\r\n              onSubmit={handleSubmit()} >\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            <Link href=\"/\" underline=\"always\">\r\n              Forgot password?\r\n            </Link>\r\n          </Typography>\r\n\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}