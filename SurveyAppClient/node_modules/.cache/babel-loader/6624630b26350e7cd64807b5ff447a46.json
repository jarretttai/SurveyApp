{"ast":null,"code":"import _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\Question.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Paper, Grid } from \"@material-ui/core\";\nimport styles from \"../styles/QuestionStyle\";\nimport McQuestion from \"./McQuestion\";\nimport CbQuestion from \"./CbQuestion\";\nimport TextQuestion from \"./TextQuestion\";\nimport NumQuestion from \"./NumQuestion\";\nimport ScaleQuestion from \"./ScaleQuestion\";\nvar useStyles = makeStyles(styles);\nexport default function Question(props) {\n  var classes = useStyles();\n\n  var _useState = useState(props.qInfo),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectorOpen = _useState4[0],\n      setSelectorOpen = _useState4[1];\n\n  console.log(data);\n  var question;\n  if (info.type === \"mc\") question = /*#__PURE__*/React.createElement(McQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 36\n    }\n  });else if (infotype === \"cb\") question = /*#__PURE__*/React.createElement(CbQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 41\n    }\n  });else if (info === \"text\") question = /*#__PURE__*/React.createElement(TextQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 39\n    }\n  });else if (info === \"num\") question = /*#__PURE__*/React.createElement(NumQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }\n  });else if (info === \"scale\") question = /*#__PURE__*/React.createElement(ScaleQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.questionPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.mainArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, question), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/Question.js"],"names":["React","useState","makeStyles","Paper","Grid","styles","McQuestion","CbQuestion","TextQuestion","NumQuestion","ScaleQuestion","useStyles","Question","props","classes","qInfo","info","setInfo","selectorOpen","setSelectorOpen","console","log","data","question","type","infotype","questionPaper","mainArea"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,IAA5B,QAAwC,mBAAxC;AAGA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAIA,IAAMC,SAAS,GAAGT,UAAU,CAACG,MAAD,CAA5B;AAGA,eAAe,SAASO,QAAT,CAAkBC,KAAlB,EAAyB;AAEtC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAFsC,kBAGdV,QAAQ,CAACY,KAAK,CAACE,KAAP,CAHM;AAAA;AAAA,MAG/BC,IAH+B;AAAA,MAGzBC,OAHyB;;AAAA,mBAIEhB,QAAQ,CAAC,KAAD,CAJV;AAAA;AAAA,MAI/BiB,YAJ+B;AAAA,MAIjBC,eAJiB;;AAMtCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAGA,MAAIC,QAAJ;AACA,MAAIP,IAAI,CAACQ,IAAL,KAAY,IAAhB,EAAsBD,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEP,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAAtB,KACK,IAAIS,QAAQ,KAAG,IAAf,EAAsBF,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEP,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAAtB,KACA,IAAIA,IAAI,KAAG,MAAX,EAAoBO,QAAQ,gBAAG,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEP,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAApB,KACA,IAAIA,IAAI,KAAG,KAAX,EAAoBO,QAAQ,gBAAG,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEP,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAApB,KACA,IAAIA,IAAI,KAAG,OAAX,EAAoBO,QAAQ,gBAAG,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEP,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AAEzB,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,OAAO,CAACY,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,UAAU,EAAC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAEZ,OAAO,CAACa,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF;AAkBD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles, Paper, Grid } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\nimport McQuestion from \"./McQuestion\";\r\nimport CbQuestion from \"./CbQuestion\";\r\nimport TextQuestion from \"./TextQuestion\";\r\nimport NumQuestion from \"./NumQuestion\";\r\nimport ScaleQuestion from \"./ScaleQuestion\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function Question(props) {\r\n\r\n  const classes = useStyles();\r\n  const [info, setInfo] = useState(props.qInfo);\r\n  const [selectorOpen, setSelectorOpen] = useState(false);\r\n\r\n  console.log(data);\r\n\r\n\r\n  let question;\r\n  if (info.type===\"mc\") question = <McQuestion qInfo={info} />;\r\n  else if (infotype===\"cb\")  question = <CbQuestion qInfo={info} />;\r\n  else if (info===\"text\")  question = <TextQuestion qInfo={info} />;\r\n  else if (info===\"num\")   question = <NumQuestion qInfo={info} />;\r\n  else if (info===\"scale\") question = <ScaleQuestion qInfo={info} />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.questionPaper}>\r\n        <Grid container direction=\"row\" alignItems=\"flex-start\">\r\n          <Grid item className={classes.mainArea}>\r\n            {question}\r\n          </Grid>\r\n          <Grid item >\r\n            \r\n          </Grid>\r\n        </Grid>\r\n        \r\n      </Paper>\r\n      \r\n        \r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}