{"ast":null,"code":"import _objectSpread from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\McQuestion.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Grid, TextField } from \"@material-ui/core\";\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport styles from \"../styles/QuestionStyle\";\nvar useStyles = makeStyles(styles);\n\nfunction Option(props) {\n  var _useState = useState(props.opt),\n      _useState2 = _slicedToArray(_useState, 2),\n      opt = _useState2[0],\n      setOpt = _useState2[1];\n\n  var updateOptName = function updateOptName(e) {\n    setOpt(_objectSpread({\n      name: e.target.value\n    }, opt));\n    props.updateOption();\n    console.log(\"in option\");\n    console.log(opt);\n  };\n\n  var updateOptCascade = function updateOptCascade(e) {\n    setOpt(_objectSpread({}, opt, {\n      cascadeIndex: e.target.value\n    }));\n    props.updateOption();\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"option \" + props.index,\n    onBlur: updateOptName,\n    defaultValue: props.opt.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"jump to\",\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: updateOptCascade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n} //multi choices\n\n\nexport default function McQuestion(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState3 = useState(props.qInfo.options),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var updateOption = function updateOption(index, opt) {\n    console.log(opt);\n    var newOptions = options;\n    newOptions[index] = opt;\n    setOptions(newOptions);\n    props.updateOpt();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, options.map(function (opt, index) {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: index,\n      index: index,\n      opt: opt,\n      updateOption: updateOption,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/McQuestion.js"],"names":["React","useState","makeStyles","Grid","TextField","RadioButtonUncheckedIcon","styles","useStyles","Option","props","opt","setOpt","updateOptName","e","name","target","value","updateOption","console","log","updateOptCascade","cascadeIndex","index","shrink","McQuestion","classes","qInfo","options","setOptions","newOptions","updateOpt","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles, Grid, TextField } from \"@material-ui/core\";\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nfunction Option(props) {\r\n\r\n  const [opt, setOpt] = useState(props.opt);\r\n\r\n  const updateOptName = e => {\r\n    setOpt({name: e.target.value, ...opt});\r\n    props.updateOption();\r\n    console.log(\"in option\");\r\n    console.log(opt);\r\n  }\r\n\r\n  const updateOptCascade = e => {\r\n    setOpt({...opt, cascadeIndex: e.target.value});\r\n    props.updateOption();\r\n  }\r\n\r\n  return (\r\n    \r\n    <Grid container direction=\"row\" >\r\n      <Grid item>\r\n        <RadioButtonUncheckedIcon />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField \r\n        label={\"option \"+props.index}\r\n        onBlur={updateOptName}\r\n        defaultValue={props.opt.name}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          label=\"jump to\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onBlur={updateOptCascade}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n//multi choices\r\nexport default function McQuestion (props) {\r\n\r\n  const classes = useStyles();\r\n  const [options, setOptions] = useState(props.qInfo.options);\r\n\r\n  const updateOption = (index, opt) =>{\r\n    console.log(opt);\r\n    let newOptions = options;\r\n    newOptions[index] = opt;\r\n    setOptions(newOptions);\r\n    props.updateOpt();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        options.map(\r\n          (opt, index) => (\r\n            <Option \r\n            key={index} \r\n            index={index} \r\n            opt={opt} \r\n            updateOption={updateOption}\r\n            />\r\n        ))\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}