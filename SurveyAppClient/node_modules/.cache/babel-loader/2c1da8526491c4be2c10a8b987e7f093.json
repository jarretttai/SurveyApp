{"ast":null,"code":"var _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\Question.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport styles from \"../styles/QuestionStyle\";\nvar useStyles = makeStyles(styles); //multi choices\n\nfunction mcQuestions(content, options) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"mcQuestions\");\n}\n\nfunction cbQuestions(content, options) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"cbQuestions\");\n}\n\nfunction textQuestions(content) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"textQuestions\");\n}\n\nfunction numQuestions(content) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"numQuestions\");\n}\n\nfunction scaleQuestions(content) {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"scaleQuestions\");\n}\n\nexport default function Question(props) {\n  var classes = useStyles();\n  console.log(props.qInfo);\n  var question;\n  if (props.qInfo.type === 'mcq') question = mcQuestions(content, options);else if (props.qInfo.type === 'cb') question = cbQuestions(content, options);else if (props.qInfo.type === 'text') question = textQuestions(content);else if (props.qInfo.type === 'num') question = numQuestions(content);else if (props.qInfo.type === 'scale') question = scaleQuestions(content);\n  console.log(question);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, question);\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/Question.js"],"names":["React","makeStyles","styles","useStyles","mcQuestions","content","options","cbQuestions","textQuestions","numQuestions","scaleQuestions","Question","props","classes","console","log","qInfo","question","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAGA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,IAAMC,SAAS,GAAGF,UAAU,CAACC,MAAD,CAA5B,C,CAIA;;AACA,SAASE,WAAT,CAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;AACtC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAGD;;AAED,SAASC,WAAT,CAAsBF,OAAtB,EAA+BC,OAA/B,EAAwC;AACtC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAGD;;AAED,SAASE,aAAT,CAAwBH,OAAxB,EAAiC;AAC/B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF;AAGD;;AAED,SAASI,YAAT,CAAuBJ,OAAvB,EAAgC;AAC9B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;;AAED,SAASK,cAAT,CAAyBL,OAAzB,EAAkC;AAChC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD;;AAED,eAAe,SAASM,QAAT,CAAkBC,KAAlB,EAAyB;AAEtC,MAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAlB;AAEA,MAAIC,QAAJ;AAEA,MAAIL,KAAK,CAACI,KAAN,CAAYE,IAAZ,KAAmB,KAAvB,EAAsCD,QAAQ,GAAGb,WAAW,CAACC,OAAD,EAAUC,OAAV,CAAtB,CAAtC,KACK,IAAIM,KAAK,CAACI,KAAN,CAAYE,IAAZ,KAAmB,IAAvB,EAAiCD,QAAQ,GAAGV,WAAW,CAACF,OAAD,EAAUC,OAAV,CAAtB,CAAjC,KACA,IAAIM,KAAK,CAACI,KAAN,CAAYE,IAAZ,KAAmB,MAAvB,EAAiCD,QAAQ,GAAGT,aAAa,CAACH,OAAD,CAAxB,CAAjC,KACA,IAAIO,KAAK,CAACI,KAAN,CAAYE,IAAZ,KAAmB,KAAvB,EAAiCD,QAAQ,GAAGR,YAAY,CAACJ,OAAD,CAAvB,CAAjC,KACA,IAAIO,KAAK,CAACI,KAAN,CAAYE,IAAZ,KAAmB,OAAvB,EAAiCD,QAAQ,GAAGP,cAAc,CAACL,OAAD,CAAzB;AAEtCS,EAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,QAFJ,CADF;AAQD","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\n\r\n//multi choices\r\nfunction mcQuestions (content, options) {\r\n  return (\r\n    <h1>mcQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction cbQuestions (content, options) {\r\n  return (\r\n    <h1>cbQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction textQuestions (content) {\r\n  return (\r\n    <h1>textQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction numQuestions (content) {\r\n  return (\r\n    <h1>numQuestions</h1>\r\n  )\r\n}\r\n\r\nfunction scaleQuestions (content) {\r\n  return (\r\n    <h1>scaleQuestions</h1>\r\n  )\r\n}\r\n\r\nexport default function Question(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(props.qInfo);\r\n\r\n  let question;\r\n\r\n  if (props.qInfo.type==='mcq')         question = mcQuestions(content, options);\r\n  else if (props.qInfo.type==='cb')     question = cbQuestions(content, options);\r\n  else if (props.qInfo.type==='text')   question = textQuestions(content);\r\n  else if (props.qInfo.type==='num')    question = numQuestions(content);\r\n  else if (props.qInfo.type==='scale')  question = scaleQuestions(content);\r\n\r\n  console.log(question);\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      { question }\r\n        \r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}