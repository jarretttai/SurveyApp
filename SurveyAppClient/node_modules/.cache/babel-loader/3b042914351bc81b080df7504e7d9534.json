{"ast":null,"code":"import _objectSpread from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyAppClient\\\\src\\\\views\\\\Login.js\";\nimport React from \"react\";\nimport { Button, Grid, Paper, Typography, Link } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { useState } from \"react\";\nimport styles from \"../styles/SignFormStyle\";\nvar useStyles = makeStyles(styles);\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  var _useState = useState({\n    emailEmpty: false,\n    pwdEmpty: false,\n    emailError: false,\n    pwdError: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var validateEmail = function validateEmail(e) {\n    if (e.target.value === \"\") {\n      var emailEmpty = error.emailEmpty,\n          _others = _objectWithoutProperties(error, [\"emailEmpty\"]);\n\n      emailEmpty = true;\n      setError(_objectSpread({\n        emailEmpty: emailEmpty\n      }, _others));\n    } else {\n      var regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      var _emailEmpty = error.emailEmpty,\n          emailError = error.emailError,\n          _others2 = _objectWithoutProperties(error, [\"emailEmpty\", \"emailError\"]);\n\n      if (!regex.test(e.target.value)) {\n        emailError = true;\n        _emailEmpty = false;\n        setError(_objectSpread({\n          emailEmpty: _emailEmpty,\n          emailError: emailError\n        }, _others2));\n      } else {\n        emailError = false;\n        _emailEmpty = false;\n        setError(_objectSpread({\n          emailEmpty: _emailEmpty,\n          emailError: emailError\n        }, _others2));\n      }\n    }\n  };\n\n  var emailHelperText = function emailHelperText() {\n    if (error.emailEmpty) {\n      return \"Email address can't be empty\";\n    } else if (error.emailError) {\n      return \"Please input correct email address\";\n    } else {\n      return \"\";\n    }\n  };\n\n  var validatePwd = function validatePwd(e) {\n    if (e.target.value === \"\") {\n      var _pwdEmpty = error.pwdEmpty,\n          _others3 = _objectWithoutProperties(error, [\"pwdEmpty\"]);\n\n      _pwdEmpty = true;\n      setError(_objectSpread({\n        pwdEmpty: _pwdEmpty\n      }, _others3));\n    } else {\n      pwdError = false;\n      pwdEmpty = false;\n      setError(_objectSpread({\n        pwdEmpty: pwdEmpty,\n        pwdError: pwdError\n      }, others));\n    }\n  };\n\n  var pwdHelperText = function pwdHelperText() {\n    if (error.pwdEmpty) {\n      return \"Password can't be empty\";\n    } else if (error.pwdError) {\n      return \"Wrong password or email address\";\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 10,\n    md: 6,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    className: classes.formHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccountCircleIcon, {\n    color: \"primary\",\n    style: {\n      fontSize: 48\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Sign in\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"No account yet? \", /*#__PURE__*/React.createElement(Link, {\n    href: \"/signup\",\n    underline: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Sign up here\")))), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"signin-email\",\n    type: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    onBlur: validateEmail,\n    error: error.emailEmpty || error.emailError,\n    helperText: emailHelperText(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"signin-pwd\",\n    type: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    size: \"medium\",\n    fullWidth: true,\n    onBlur: validatePwd,\n    error: error.pwdEmpty || error.pwdError,\n    helperText: pwdHelperText(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"medium\",\n    fullWidth: true,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"/\",\n    underline: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Forgot password?\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/src/SurveyAppClient/src/views/Login.js"],"names":["React","Button","Grid","Paper","Typography","Link","TextField","makeStyles","AccountCircleIcon","useState","styles","useStyles","Login","props","classes","emailEmpty","pwdEmpty","emailError","pwdError","error","setError","validateEmail","e","target","value","others","regex","test","emailHelperText","validatePwd","pwdHelperText","minHeight","paper","formHeader","fontSize","form","button"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,EAA0CC,IAA1C,QAAsD,mBAAtD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAACG,MAAD,CAA5B;;AAEA,SAASE,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AADoB,kBAEMF,QAAQ,CAAC;AAACM,IAAAA,UAAU,EAAE,KAAb;AAAoBC,IAAAA,QAAQ,EAAE,KAA9B;AAAqCC,IAAAA,UAAU,EAAE,KAAjD;AAAwDC,IAAAA,QAAQ,EAAE;AAAlE,GAAD,CAFd;AAAA;AAAA,MAEbC,KAFa;AAAA,MAENC,QAFM;;AAIpB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AAC3B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAiB,EAArB,EAAyB;AAAA,UAClBT,UADkB,GACOI,KADP,CAClBJ,UADkB;AAAA,UACHU,OADG,4BACON,KADP;;AAEvBJ,MAAAA,UAAU,GAAG,IAAb;AACAK,MAAAA,QAAQ;AAAEL,QAAAA,UAAU,EAAVA;AAAF,SAAiBU,OAAjB,EAAR;AACD,KAJD,MAIO;AACL,UAAMC,KAAK,GAAG,sJAAd;;AADK,UAEAX,WAFA,GAEqCI,KAFrC,CAEAJ,UAFA;AAAA,UAEYE,UAFZ,GAEqCE,KAFrC,CAEYF,UAFZ;AAAA,UAE2BQ,QAF3B,4BAEqCN,KAFrC;;AAGL,UAAI,CAACO,KAAK,CAACC,IAAN,CAAWL,CAAC,CAACC,MAAF,CAASC,KAApB,CAAL,EAAiC;AAC/BP,QAAAA,UAAU,GAAG,IAAb;AACAF,QAAAA,WAAU,GAAG,KAAb;AACAK,QAAAA,QAAQ;AAAEL,UAAAA,UAAU,EAAVA,WAAF;AAAcE,UAAAA,UAAU,EAAVA;AAAd,WAA6BQ,QAA7B,EAAR;AACD,OAJD,MAIO;AACLR,QAAAA,UAAU,GAAG,KAAb;AACAF,QAAAA,WAAU,GAAG,KAAb;AACAK,QAAAA,QAAQ;AAAEL,UAAAA,UAAU,EAAVA,WAAF;AAAcE,UAAAA,UAAU,EAAVA;AAAd,WAA6BQ,QAA7B,EAAR;AACD;AACF;AACF,GAlBD;;AAoBA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIT,KAAK,CAACJ,UAAV,EAAsB;AACpB,aAAO,8BAAP;AACD,KAFD,MAGK,IAAII,KAAK,CAACF,UAAV,EAAsB;AACzB,aAAO,oCAAP;AACD,KAFI,MAGA;AACH,aAAO,EAAP;AACD;AACF,GAVD;;AAYA,MAAMY,WAAW,GAAG,SAAdA,WAAc,CAACP,CAAD,EAAO;AACzB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAiB,EAArB,EAAyB;AAAA,UAClBR,SADkB,GACKG,KADL,CAClBH,QADkB;AAAA,UACLS,QADK,4BACKN,KADL;;AAEvBH,MAAAA,SAAQ,GAAG,IAAX;AACAI,MAAAA,QAAQ;AAAEJ,QAAAA,QAAQ,EAARA;AAAF,SAAeS,QAAf,EAAR;AACD,KAJD,MAIO;AACLP,MAAAA,QAAQ,GAAG,KAAX;AACAF,MAAAA,QAAQ,GAAG,KAAX;AACAI,MAAAA,QAAQ;AAAEJ,QAAAA,QAAQ,EAARA,QAAF;AAAYE,QAAAA,QAAQ,EAARA;AAAZ,SAAyBO,MAAzB,EAAR;AACD;AACF,GAVD;;AAYA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIX,KAAK,CAACH,QAAV,EAAoB;AAClB,aAAO,yBAAP;AACD,KAFD,MAGK,IAAIG,KAAK,CAACD,QAAV,EAAoB;AACvB,aAAO,iCAAP;AACD,KAFI,MAGA;AACH,aAAO,EAAP;AACD;AACF,GAVD;;AAYA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,UAAU,EAAC,QAA5C;AAAqD,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEjB,OAAO,CAACkB,KAA1B;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,OAAO,EAAE,CALX;AAME,IAAA,SAAS,EAAElB,OAAO,CAACmB,UANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,SAAzB;AAAmC,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAWE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAXF,eAcE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,kBADH,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CAdF,CAFF,eA0BE;AAAM,IAAA,SAAS,EAAEpB,OAAO,CAACqB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,MAAM,EAAEd,aARV;AASE,IAAA,KAAK,EAAEF,KAAK,CAACJ,UAAN,IAAkBI,KAAK,CAACF,UATjC;AAUE,IAAA,UAAU,EAAGW,eAAe,EAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAaE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,OAAO,EAAC,UAJV;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,MAAM,EAAEC,WARV;AASE,IAAA,KAAK,EAAEV,KAAK,CAACH,QAAN,IAAgBG,KAAK,CAACD,QAT/B;AAUE,IAAA,UAAU,EAAGY,aAAa,EAV5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAyBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,QAAjD;AAA0D,IAAA,SAAS,MAAnE;AAAoE,IAAA,SAAS,EAAEhB,OAAO,CAACsB,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBF,CA1BF,eAwDE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,SAAS,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAxDF,CADF,CADF,CADF;AAqED;;AAED,eAAexB,KAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Grid, Paper, Typography, Link } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { useState } from \"react\";\r\n\r\nimport styles from \"../styles/SignFormStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState({emailEmpty: false, pwdEmpty: false, emailError: false, pwdError: false});\r\n\r\n  const validateEmail = (e) => {\r\n    if (e.target.value===\"\") {\r\n      let {emailEmpty, ...others} = error;\r\n      emailEmpty = true;\r\n      setError({emailEmpty, ...others});\r\n    } else {\r\n      const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      let {emailEmpty, emailError, ...others} = error;\r\n      if (!regex.test(e.target.value)) {\r\n        emailError = true;\r\n        emailEmpty = false;\r\n        setError({emailEmpty, emailError, ...others});\r\n      } else {\r\n        emailError = false;\r\n        emailEmpty = false;\r\n        setError({emailEmpty, emailError, ...others});\r\n      }\r\n    }\r\n  }\r\n\r\n  const emailHelperText = () => {\r\n    if (error.emailEmpty) {\r\n      return \"Email address can't be empty\"\r\n    } \r\n    else if (error.emailError) {\r\n      return \"Please input correct email address\"\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  const validatePwd = (e) => {\r\n    if (e.target.value===\"\") {\r\n      let {pwdEmpty, ...others} = error;\r\n      pwdEmpty = true;\r\n      setError({pwdEmpty, ...others});\r\n    } else {\r\n      pwdError = false;\r\n      pwdEmpty = false;\r\n      setError({pwdEmpty, pwdError, ...others});      \r\n    }\r\n  }\r\n\r\n  const pwdHelperText = () => {\r\n    if (error.pwdEmpty) {\r\n      return \"Password can't be empty\"\r\n    }\r\n    else if (error.pwdError) {\r\n      return \"Wrong password or email address\"\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\r\n      <Grid item sm={10} md={6} lg={3}>\r\n        <Paper className={classes.paper} elevation={3}>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            className={classes.formHeader}\r\n          >\r\n            <Grid item>\r\n              <AccountCircleIcon color=\"primary\" style={{ fontSize: 48 }}/>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h4\">Sign in</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"body2\">\r\n                {\"No account yet? \"}\r\n                <Link href=\"/signup\" underline=\"always\">\r\n                  Sign up here\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <form className={classes.form}>\r\n            <TextField\r\n              id=\"signin-email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              onBlur={validateEmail}\r\n              error={error.emailEmpty||error.emailError}\r\n              helperText={ emailHelperText() }\r\n            />\r\n            <TextField\r\n              id=\"signin-pwd\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              size=\"medium\"\r\n              fullWidth\r\n              onBlur={validatePwd}\r\n              error={error.pwdEmpty||error.pwdError}\r\n              helperText={ pwdHelperText() }\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" size=\"medium\" fullWidth className={classes.button}>\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            <Link href=\"/\" underline=\"always\">\r\n              Forgot password?\r\n            </Link>\r\n          </Typography>\r\n\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}