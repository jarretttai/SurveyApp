{"ast":null,"code":"var _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\Question.js\";\nimport React from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\nimport styles from \"../styles/QuestionStyle\";\nimport McQuestion from \"./McQuestion\";\nimport CbQuestion from \"./CbQuestion\";\nimport TextQuestion from \"./TextQuestion\";\nimport NumQuestion from \"./NumQuestion\";\nimport ScaleQuestion from \"./ScaleQuestion\";\nvar useStyles = makeStyles(styles);\nexport default function Question(props) {\n  var classes = useStyles();\n  console.log(props.qInfo);\n  var question;\n  if (props.qInfo === \"mc\") question = /*#__PURE__*/React.createElement(McQuestion, {\n    qInfo: props.qInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 38\n    }\n  });else if (props.qInfo === \"cb\") question = /*#__PURE__*/React.createElement(CbQuestion, {\n    qInfo: props.qInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 44\n    }\n  });else if (props.qInfo === \"text\") question = /*#__PURE__*/React.createElement(TextQuestion, {\n    qInfo: props.qInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 46\n    }\n  });else if (props.qInfo === \"num\") question = /*#__PURE__*/React.createElement(NumQuestion, {\n    qInfo: props.qInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 46\n    }\n  });else if (props.qInfo === \"scale\") question = /*#__PURE__*/React.createElement(ScaleQuestion, {\n    qInfo: props.qInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 46\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, question);\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/Question.js"],"names":["React","makeStyles","Paper","styles","McQuestion","CbQuestion","TextQuestion","NumQuestion","ScaleQuestion","useStyles","Question","props","classes","console","log","qInfo","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,mBAAlC;AAGA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAIA,IAAMC,SAAS,GAAGR,UAAU,CAACE,MAAD,CAA5B;AAGA,eAAe,SAASO,QAAT,CAAkBC,KAAlB,EAAyB;AAEtC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAlB;AAEA,MAAIC,QAAJ;AACA,MAAIL,KAAK,CAACI,KAAN,KAAc,IAAlB,EAAwBC,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEL,KAAK,CAACI,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAAxB,KACK,IAAIJ,KAAK,CAACI,KAAN,KAAc,IAAlB,EAAyBC,QAAQ,gBAAG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEL,KAAK,CAACI,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAAzB,KACA,IAAIJ,KAAK,CAACI,KAAN,KAAc,MAAlB,EAA2BC,QAAQ,gBAAG,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEL,KAAK,CAACI,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAA3B,KACA,IAAIJ,KAAK,CAACI,KAAN,KAAc,KAAlB,EAA2BC,QAAQ,gBAAG,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEL,KAAK,CAACI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX,CAA3B,KACA,IAAIJ,KAAK,CAACI,KAAN,KAAc,OAAlB,EAA2BC,QAAQ,gBAAG,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,KAAK,CAACI,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AAEhC,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,QAFJ,CADF;AAQD","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, Paper } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\nimport McQuestion from \"./McQuestion\";\r\nimport CbQuestion from \"./CbQuestion\";\r\nimport TextQuestion from \"./TextQuestion\";\r\nimport NumQuestion from \"./NumQuestion\";\r\nimport ScaleQuestion from \"./ScaleQuestion\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function Question(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(props.qInfo);\r\n\r\n  let question;\r\n  if (props.qInfo===\"mc\") question = <McQuestion qInfo={props.qInfo} />;\r\n  else if (props.qInfo===\"cb\")  question = <CbQuestion qInfo={props.qInfo} />;\r\n  else if (props.qInfo===\"text\")  question = <TextQuestion qInfo={props.qInfo} />;\r\n  else if (props.qInfo===\"num\")   question = <NumQuestion qInfo={props.qInfo} />;\r\n  else if (props.qInfo===\"scale\") question = <ScaleQuestion qInfo={props.qInfo} />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      { question }\r\n        \r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}