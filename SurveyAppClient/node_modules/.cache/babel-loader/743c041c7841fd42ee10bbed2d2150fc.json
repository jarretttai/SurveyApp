{"ast":null,"code":"import _toConsumableArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\McQuestion.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Grid, TextField, Button, IconButton } from \"@material-ui/core\";\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport styles from \"../styles/QuestionStyle\";\nvar useStyles = makeStyles(styles);\n\nfunction Option(props) {\n  var classes = useStyles();\n\n  var _useState = useState(props.option),\n      _useState2 = _slicedToArray(_useState, 2),\n      opt = _useState2[0],\n      setOpt = _useState2[1];\n\n  var updateOptName = function updateOptName(e) {\n    var newOpt = opt;\n    newOpt['name'] = e.target.value;\n    setOpt(newOpt);\n    props.updateOption(props.index, opt);\n  };\n\n  var updateOptCascade = function updateOptCascade(e) {\n    var newOpt = opt;\n    newOpt['cascdeIndex'] = e.target.value;\n    setOpt(newOpt);\n    props.updateOption(props.index, opt);\n  };\n\n  var deleteItself = function deleteItself(e) {\n    e.stopPropagation();\n    props.deleteOption(props.index, e);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    className: classes.optionIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"option \" + (props.index + 1),\n    onBlur: updateOptName,\n    className: classes.optionInput,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"jump to\",\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: updateOptCascade,\n    className: classes.cascadeInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: deleteItself,\n    className: classes.optionDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClearIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n} //multi choices\n\n\nexport default function McQuestion(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState3 = useState(props.qInfo.options),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var updateOptions = function updateOptions(index, opt) {\n    // let newOptions = options;\n    // newOptions[index] = opt;\n    // setOptions(newOptions);\n    props.updateOpt(options);\n  };\n\n  var addOptions = function addOptions(e) {\n    setOptions([].concat(_toConsumableArray(options), [{\n      name: '',\n      cascadeIndex: -1\n    }]));\n    props.updateOpt(options);\n    console.log(options);\n  };\n\n  var deleteOptions = function deleteOptions(index, e) {\n    var newOptions = options.splice(index, 1);\n    setOptions(newOptions);\n    props.updateOpt(options);\n    console.log(index);\n    console.log(options);\n    console.log(e);\n  };\n\n  console.log(options);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, options.map(function (opt, index) {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: index,\n      index: index,\n      option: opt,\n      updateOption: updateOptions,\n      deleteOption: deleteOptions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: addOptions,\n    className: classes.optionAddButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Add Option\"));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/McQuestion.js"],"names":["React","useState","makeStyles","Grid","TextField","Button","IconButton","RadioButtonUncheckedIcon","ClearIcon","styles","useStyles","Option","props","classes","option","opt","setOpt","updateOptName","e","newOpt","target","value","updateOption","index","updateOptCascade","deleteItself","stopPropagation","deleteOption","optionIcon","optionInput","shrink","cascadeInput","optionDelete","McQuestion","qInfo","options","setOptions","updateOptions","updateOpt","addOptions","name","cascadeIndex","console","log","deleteOptions","newOptions","splice","map","optionAddButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,SAA3B,EAAsCC,MAAtC,EAA8CC,UAA9C,QAAgE,mBAAhE;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,IAAMC,SAAS,GAAGR,UAAU,CAACO,MAAD,CAA5B;;AAGA,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;AAErB,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAFqB,kBAICT,QAAQ,CAACW,KAAK,CAACE,MAAP,CAJT;AAAA;AAAA,MAIdC,GAJc;AAAA,MAITC,MAJS;;AAMrB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC,EAAI;AACzB,QAAIC,MAAM,GAAGJ,GAAb;AACAI,IAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAL,IAAAA,MAAM,CAACG,MAAD,CAAN;AACAP,IAAAA,KAAK,CAACU,YAAN,CAAmBV,KAAK,CAACW,KAAzB,EAAgCR,GAAhC;AACD,GALD;;AAOA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAN,CAAC,EAAI;AAC5B,QAAIC,MAAM,GAAGJ,GAAb;AACAI,IAAAA,MAAM,CAAC,aAAD,CAAN,GAAwBD,CAAC,CAACE,MAAF,CAASC,KAAjC;AACAL,IAAAA,MAAM,CAACG,MAAD,CAAN;AACAP,IAAAA,KAAK,CAACU,YAAN,CAAmBV,KAAK,CAACW,KAAzB,EAAgCR,GAAhC;AACD,GALD;;AAOA,MAAMU,YAAY,GAAG,SAAfA,YAAe,CAAAP,CAAC,EAAI;AACxBA,IAAAA,CAAC,CAACQ,eAAF;AACAd,IAAAA,KAAK,CAACe,YAAN,CAAmBf,KAAK,CAACW,KAAzB,EAAgCL,CAAhC;AACD,GAHD;;AAKA,sBAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,wBAAD;AAA0B,IAAA,SAAS,EAAEL,OAAO,CAACe,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACA,IAAA,KAAK,EAAE,aAAWhB,KAAK,CAACW,KAAN,GAAY,CAAvB,CADP;AAEA,IAAA,MAAM,EAAEN,aAFR;AAGA,IAAA,SAAS,EAAEJ,OAAO,CAACgB,WAHnB;AAIA,IAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE;AADO,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAcE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,eAAe,EAAE;AACfA,MAAAA,MAAM,EAAE;AADO,KAHnB;AAME,IAAA,MAAM,EAAEN,gBANV;AAOE,IAAA,SAAS,EAAEX,OAAO,CAACkB,YAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,eAyBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEN,YAArB;AAAmC,IAAA,SAAS,EAAEZ,OAAO,CAACmB,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAzBF,CAFF;AAkCD,C,CAED;;;AACA,eAAe,SAASC,UAAT,CAAqBrB,KAArB,EAA4B;AAAA;;AAEzC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAFyC,mBAGXT,QAAQ,CAACW,KAAK,CAACsB,KAAN,CAAYC,OAAb,CAHG;AAAA;AAAA,MAGlCA,OAHkC;AAAA,MAGzBC,UAHyB;;AAKzC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACd,KAAD,EAAQR,GAAR,EAAe;AACnC;AACA;AACA;AACAH,IAAAA,KAAK,CAAC0B,SAAN,CAAgBH,OAAhB;AACD,GALD;;AAOA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAAArB,CAAC,EAAI;AACtBkB,IAAAA,UAAU,8BAAKD,OAAL,IAAc;AAACK,MAAAA,IAAI,EAAC,EAAN;AAAUC,MAAAA,YAAY,EAAE,CAAC;AAAzB,KAAd,GAAV;AACA7B,IAAAA,KAAK,CAAC0B,SAAN,CAAgBH,OAAhB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,GAJD;;AAMA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACrB,KAAD,EAAQL,CAAR,EAAc;AAClC,QAAM2B,UAAU,GAAGV,OAAO,CAACW,MAAR,CAAevB,KAAf,EAAsB,CAAtB,CAAnB;AACAa,IAAAA,UAAU,CAACS,UAAD,CAAV;AACAjC,IAAAA,KAAK,CAAC0B,SAAN,CAAgBH,OAAhB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYzB,CAAZ;AACD,GAPD;;AASAwB,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,OAAO,CAACY,GAAR,CACE,UAAChC,GAAD,EAAMQ,KAAN;AAAA,wBACE,oBAAC,MAAD;AACA,MAAA,GAAG,EAAEA,KADL;AAEA,MAAA,KAAK,EAAEA,KAFP;AAGA,MAAA,MAAM,EAAER,GAHR;AAIA,MAAA,YAAY,EAAEsB,aAJd;AAKA,MAAA,YAAY,EAAEO,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAAA,GADF,CAFJ,eAaE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEL,UAAjC;AAA6C,IAAA,SAAS,EAAE1B,OAAO,CAACmC,eAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CADF;AAmBD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles, Grid, TextField, Button, IconButton } from \"@material-ui/core\";\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nfunction Option(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [opt, setOpt] = useState(props.option);\r\n\r\n  const updateOptName = e => {\r\n    let newOpt = opt;\r\n    newOpt['name'] = e.target.value;\r\n    setOpt(newOpt);\r\n    props.updateOption(props.index, opt);\r\n  }\r\n\r\n  const updateOptCascade = e => {\r\n    let newOpt = opt;\r\n    newOpt['cascdeIndex'] = e.target.value;\r\n    setOpt(newOpt);\r\n    props.updateOption(props.index, opt);\r\n  }\r\n\r\n  const deleteItself = e => {\r\n    e.stopPropagation();\r\n    props.deleteOption(props.index, e);\r\n  }\r\n\r\n  return (\r\n    \r\n    <Grid container direction=\"row\" >\r\n      <Grid item>\r\n        <RadioButtonUncheckedIcon className={classes.optionIcon} />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField \r\n        label={\"option \"+(props.index+1)}\r\n        onBlur={updateOptName}\r\n        className={classes.optionInput}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          label=\"jump to\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onBlur={updateOptCascade}\r\n          className={classes.cascadeInput}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <IconButton onClick={deleteItself} className={classes.optionDelete}>\r\n          <ClearIcon  />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n//multi choices\r\nexport default function McQuestion (props) {\r\n\r\n  const classes = useStyles();\r\n  const [options, setOptions] = useState(props.qInfo.options);\r\n\r\n  const updateOptions = (index, opt) =>{\r\n    // let newOptions = options;\r\n    // newOptions[index] = opt;\r\n    // setOptions(newOptions);\r\n    props.updateOpt(options);\r\n  }\r\n\r\n  const addOptions = e => {\r\n    setOptions([...options, {name:'', cascadeIndex: -1}]);\r\n    props.updateOpt(options);\r\n    console.log(options);\r\n  }\r\n\r\n  const deleteOptions = (index, e) => {\r\n    const newOptions = options.splice(index, 1);\r\n    setOptions(newOptions);\r\n    props.updateOpt(options);\r\n    console.log(index);\r\n    console.log(options);\r\n    console.log(e);\r\n  }\r\n\r\n  console.log(options);\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        options.map(\r\n          (opt, index) => (\r\n            <Option \r\n            key={index} \r\n            index={index} \r\n            option={opt} \r\n            updateOption={updateOptions}\r\n            deleteOption={deleteOptions}\r\n            />\r\n        ))\r\n      }\r\n      <Button color=\"primary\" onClick={addOptions} className={classes.optionAddButton}>\r\n        Add Option\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}