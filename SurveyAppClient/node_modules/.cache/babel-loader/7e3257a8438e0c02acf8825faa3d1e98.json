{"ast":null,"code":"import _toConsumableArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\views\\\\SurveyEdit.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Typography, Toolbar, Grid, Paper, TextField, Button } from \"@material-ui/core\";\nimport styles from \"../styles/SurveyEditPageStyle\";\nimport AppHeader from \"../components/AppHeader\";\nimport AppDrawer from \"../components/AppDrawer\";\nimport Question from \"../components/Question\";\nvar useStyles = makeStyles(styles);\n/*\r\n** template\r\n*/\n\nvar template = [{\n  type: 'mc',\n  content: 'who are you 1',\n  options: ['11', '12', '13']\n}, {\n  type: 'cb',\n  content: 'who are you 2',\n  options: ['21', '22', '23']\n}, {\n  type: 'text',\n  content: 'who are you 3'\n}, {\n  type: 'num',\n  content: 'who are you 4'\n}, {\n  type: 'scale',\n  content: 'who are you 5'\n}];\nexport default function EditSurveyPage(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      drawerOpen = _useState2[0],\n      setDrawerOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState([{\n    type: 'mc',\n    content: 'who r u',\n    options: ['option 1', 'option 2']\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      questions = _useState6[0],\n      setQuestions = _useState6[1]; //console.log(questions);\n\n\n  var handleDrawerOpen = function handleDrawerOpen(e) {\n    setDrawerOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose(e) {\n    setDrawerOpen(false);\n  };\n\n  var updateTitle = function updateTitle(e) {\n    setTitle(e.target.value);\n  };\n\n  var addQuestion = function addQuestion(e) {\n    setQuestions([].concat(_toConsumableArray(questions), [{\n      type: 'mc',\n      content: '',\n      options: ['option 1', 'option 2']\n    }]));\n  };\n\n  var updateQuestion = function updateQuestion(index, info) {\n    var newQuestions = questions;\n    newQuestions[index] = info;\n    setQuestions(newQuestions); // console.log(questions);\n  };\n\n  var deleteQuestion = function deleteQuestion(index) {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    handleDrawerOpen: handleDrawerOpen,\n    drawerOpen: drawerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppDrawer, {\n    open: drawerOpen,\n    handleDrawerClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 1,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.saveButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"save\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addQuestion,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"+  new question\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 1,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.titlePaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.title,\n    label: \"Title of Survey \" + props.match.params.survid,\n    inputProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 20\n      }\n    },\n    onChange: updateTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, questions.map(function (q, index) {\n    return /*#__PURE__*/React.createElement(Question, {\n      key: index,\n      index: index,\n      qInfo: q,\n      update: updateQuestion,\n      delete: deleteQuestion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/views/SurveyEdit.js"],"names":["React","useState","makeStyles","Typography","Toolbar","Grid","Paper","TextField","Button","styles","AppHeader","AppDrawer","Question","useStyles","template","type","content","options","EditSurveyPage","props","classes","drawerOpen","setDrawerOpen","title","setTitle","questions","setQuestions","handleDrawerOpen","e","handleDrawerClose","updateTitle","target","value","addQuestion","updateQuestion","index","info","newQuestions","deleteQuestion","saveButton","titlePaper","match","params","survid","style","fontSize","map","q"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { makeStyles, Typography, Toolbar, Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from \"../styles/SurveyEditPageStyle\";\r\n\r\nimport AppHeader from \"../components/AppHeader\";\r\nimport AppDrawer from \"../components/AppDrawer\";\r\nimport Question from \"../components/Question\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\n/*\r\n** template\r\n*/\r\nconst template = [\r\n  {\r\n    type: 'mc',\r\n    content: 'who are you 1',\r\n    options: ['11', '12', '13'],\r\n  },\r\n  {\r\n    type: 'cb',\r\n    content: 'who are you 2',\r\n    options: ['21', '22', '23'],\r\n  },\r\n  {\r\n    type: 'text',\r\n    content: 'who are you 3',\r\n  },\r\n  {\r\n    type: 'num',\r\n    content: 'who are you 4',\r\n  },\r\n  {\r\n    type: 'scale',\r\n    content: 'who are you 5',\r\n  },\r\n];\r\n\r\nexport default function EditSurveyPage(props) {\r\n\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      type: 'mc',\r\n      content: 'who r u',\r\n      options: ['option 1', 'option 2'],\r\n    }\r\n  ])\r\n\r\n  //console.log(questions);\r\n\r\n  const handleDrawerOpen = (e) => {\r\n    setDrawerOpen(true);\r\n  }\r\n  \r\n  const handleDrawerClose = e => {\r\n    setDrawerOpen(false);\r\n  }\r\n\r\n  const updateTitle = e => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const addQuestion = e => {\r\n    setQuestions([\r\n      ...questions, \r\n      { type: 'mc', content: '', options: ['option 1', 'option 2'],}\r\n    ]);\r\n  }\r\n\r\n  const updateQuestion = (index, info) => {\r\n    \r\n    let newQuestions = questions;\r\n    newQuestions[index] = info;\r\n    setQuestions(newQuestions);\r\n    // console.log(questions);\r\n  }\r\n\r\n  const deleteQuestion = (index) => {\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <AppHeader handleDrawerOpen={handleDrawerOpen} drawerOpen={drawerOpen} />\r\n      <AppDrawer open={drawerOpen} handleDrawerClose={handleDrawerClose} />\r\n      <Toolbar />\r\n\r\n      <Grid container direction=\"row\" alignItems=\"flex-start\">\r\n        <Grid item sm={1} md={3}></Grid>\r\n        <Grid item className={classes.saveButton} >\r\n          <Button \r\n          variant=\"contained\" \r\n          size=\"small\" \r\n          color=\"primary\">\r\n            save\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button \r\n          onClick={addQuestion}\r\n          variant=\"contained\" \r\n          size=\"small\" \r\n          color=\"primary\">\r\n            +  new question\r\n          </Button> \r\n        </Grid>\r\n        <Grid item sm={1} md={3}></Grid>\r\n      </Grid>\r\n      \r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item sm={6} md={6}>\r\n          <Paper className={classes.titlePaper} >\r\n            <TextField \r\n            className={classes.title} \r\n            label={\"Title of Survey \" + props.match.params.survid} \r\n            inputProps={{style: {fontSize: 30}}}\r\n            InputLabelProps={{style: {fontSize: 20}}}\r\n            onChange={updateTitle}/>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item sm={6} md={6}>\r\n        {\r\n          questions.map( (q, index) => (\r\n            <Question \r\n            key={index} \r\n            index={index}\r\n            qInfo={q} \r\n            update={updateQuestion}\r\n            delete={deleteQuestion}/>\r\n          ))\r\n        }\r\n        </Grid>\r\n      </Grid>\r\n      \r\n\r\n    </React.Fragment>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}