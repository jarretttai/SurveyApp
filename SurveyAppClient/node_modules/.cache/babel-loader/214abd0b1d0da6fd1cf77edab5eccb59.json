{"ast":null,"code":"import _createForOfIteratorHelper from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\views\\\\Survey.js\";\nimport React, { useState, useEffect } from 'react';\nimport Question from \"../components/Question\";\nimport { Grid, Typography, Button, Paper } from '@material-ui/core';\nimport { useCookies } from 'react-cookie';\nexport default function Survey(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cascade = _useState2[0],\n      setCascade = _useState2[1]; //记录被级联的问题id，在表里的不显示\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      oldOptions = _useState4[0],\n      setOldOptions = _useState4[1]; //保存选项改变时的前一个值，从而恢复前一个值引发的级联状态变化\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      questions = _useState6[0],\n      setQuestions = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      answers = _useState8[0],\n      setAnswers = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      setTitle = _useState10[1];\n\n  var _useCookies = useCookies(),\n      _useCookies2 = _slicedToArray(_useCookies, 1),\n      cookies = _useCookies2[0];\n\n  useEffect(function () {\n    //检查是否登录\n    if (cookies.mail == null) return props.history.replace(\"/login\");\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\n    var init = {\n      method: 'GET',\n      headers: headers\n    }; //fetch 获取 title\n\n    fetch(\"/api/title/\".concat(props.match.params.survid), init).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setTitle(data[0]);\n    }); //fetch 获取 questions\n\n    fetch(\"/api/questions/\".concat(props.match.params.survid), init).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      //提取cascade表\n      var cascade = [];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].type === \"mc\") {\n          for (var j = 0; j < data[i].options.length; j++) {\n            if (data[i].options[j].cascadeQstnId) cascade.push(data[i].options[j].cascadeQstnId);\n          }\n        }\n      }\n\n      setCascade(cascade);\n      setQuestions(data);\n    });\n  }, []);\n  /**\r\n   * front end test\r\n   */\n\n  console.log(answers);\n  console.log(cascade);\n\n  var isCascaded = function isCascaded(qstnId) {\n    for (var i = 0; i < cascade.length; i++) {\n      if (cascade[i] === qstnId) return true;\n    }\n\n    return false;\n  };\n\n  var updateOptAnswer = function updateOptAnswer(index, optId) {\n    var ans = {\n      respId: 0,\n      formId: Number(props.match.params.survid),\n      qstnId: questions[index].qstnId,\n      content: questions[index].options[optId - 1].content\n    };\n    var tempAns = answers.slice();\n    tempAns[index] = ans;\n    setAnswers(tempAns); //test\n\n    console.log(answers); //旧选项如果有级联，则改变后将级联id加回级联状态表\n\n    var cList = cascade.slice();\n\n    if (oldOptions[index]) {\n      var _cId = questions[index].options[oldOptions[index] - 1].cascadeQstnId;\n\n      if (_cId) {\n        cList.unshift(_cId);\n        setCascade(cList);\n      }\n    } //更新旧选项表\n\n\n    var old = oldOptions.slice();\n    old[index] = optId;\n    setOldOptions(old); //新的当前选项如果有级联，则在级联状态表删除掉所有该id\n\n    var cId = questions[index].options[optId - 1].cascadeQstnId;\n\n    if (cId) {\n      for (var i = 0; i < cList.length; i++) {\n        if (cList[i] == cId) {\n          cList.splice(i, 1);\n          --i;\n        }\n      }\n\n      setCascade(cList);\n      console.log(cList);\n    }\n\n    console.log(oldOptions);\n    console.log(cascade);\n  };\n\n  var updateAnswer = function updateAnswer(index, ansCont) {\n    var ans = {\n      respId: 0,\n      formId: Number(props.match.params.survid),\n      qstnId: questions[index].qstnId,\n      content: ansCont\n    };\n    var tempAns = answers.slice();\n    tempAns[index] = ans;\n    setAnswers(tempAns);\n    console.log(answers);\n  };\n\n  var handleSubmig = function handleSubmig() {\n    var temp = answers.slice(); //将因级联不显示的问题答案置为空\n\n    for (var i = 0; i < cascade.length; i++) {\n      temp[cascade[i] - 1] = null;\n    } //将非空元素统一放入response数组中\n\n\n    var response = [];\n\n    var _iterator = _createForOfIteratorHelper(temp),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _i = _step.value;\n        _i && response.push(_i);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    console.log(response);\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\n    var responseBody = JSON.stringify(response);\n    var responseInit = {\n      method: 'POST',\n      headers: headers,\n      body: responseBody\n    };\n    fetch(\"/api/response/\".concat(props.match.params.survid), responseInit).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return console.log(\"post response: \" + data);\n    });\n  };\n\n  var submitResponse = function submitResponse() {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, title))), questions.map(function (q, index) {\n    if (isCascaded(q.qstnId)) return null;\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      index: index,\n      qInfo: q,\n      updateOptAnswer: updateOptAnswer,\n      update: updateAnswer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/views/Survey.js"],"names":["React","useState","useEffect","Question","Grid","Typography","Button","Paper","useCookies","Survey","props","cascade","setCascade","oldOptions","setOldOptions","questions","setQuestions","answers","setAnswers","title","setTitle","cookies","mail","history","replace","headers","Headers","append","init","method","fetch","match","params","survid","then","res","json","data","i","length","type","j","options","cascadeQstnId","push","console","log","isCascaded","qstnId","updateOptAnswer","index","optId","ans","respId","formId","Number","content","tempAns","slice","cList","cId","unshift","old","splice","updateAnswer","ansCont","handleSubmig","temp","response","responseBody","JSON","stringify","responseInit","body","submitResponse","map","q"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,KAAnC,QAAgD,mBAAhD;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,kBAINT,QAAQ,CAAC,EAAD,CAJF;AAAA;AAAA,MAI7BU,OAJ6B;AAAA,MAIpBC,UAJoB,kBAIQ;;;AAJR,mBAKAX,QAAQ,CAAC,EAAD,CALR;AAAA;AAAA,MAK7BY,UAL6B;AAAA,MAKjBC,aALiB,kBAKa;;;AALb,mBAMFb,QAAQ,CAAC,EAAD,CANN;AAAA;AAAA,MAM7Bc,SAN6B;AAAA,MAMlBC,YANkB;;AAAA,mBAONf,QAAQ,CAAC,EAAD,CAPF;AAAA;AAAA,MAO7BgB,OAP6B;AAAA,MAOpBC,UAPoB;;AAAA,mBAQVjB,QAAQ,CAAC,EAAD,CARE;AAAA;AAAA,MAQ7BkB,KAR6B;AAAA,MAQtBC,QARsB;;AAAA,oBASlBZ,UAAU,EATQ;AAAA;AAAA,MAS7Ba,OAT6B;;AAYpCnB,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAImB,OAAO,CAACC,IAAR,IAAc,IAAlB,EAAwB,OAAOZ,KAAK,CAACa,OAAN,CAAcC,OAAd,CAAsB,QAAtB,CAAP;AAExB,QAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,gCAA/B;AACA,QAAMC,IAAI,GAAG;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXJ,MAAAA,OAAO,EAAEA;AAFE,KAAb,CANc,CAUd;;AACAK,IAAAA,KAAK,sBAAepB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,MAAlC,GAA4CL,IAA5C,CAAL,CACGM,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,aAAIjB,QAAQ,CAACiB,IAAI,CAAC,CAAD,CAAL,CAAZ;AAAA,KAFZ,EAXc,CAcd;;AACAP,IAAAA,KAAK,0BAAmBpB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,MAAtC,GAAgDL,IAAhD,CAAL,CACGM,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ;AACA,UAAI1B,OAAO,GAAC,EAAZ;;AACA,WAAK,IAAI2B,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,IAAI,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC/B,YAAID,IAAI,CAACC,CAAD,CAAJ,CAAQE,IAAR,KAAe,IAAnB,EAAyB;AACvB,eAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,IAAI,CAACC,CAAD,CAAJ,CAAQI,OAAR,CAAgBH,MAAhC,EAAwCE,CAAC,EAAzC,EAA6C;AAC3C,gBAAIJ,IAAI,CAACC,CAAD,CAAJ,CAAQI,OAAR,CAAgBD,CAAhB,EAAmBE,aAAvB,EACEhC,OAAO,CAACiC,IAAR,CAAaP,IAAI,CAACC,CAAD,CAAJ,CAAQI,OAAR,CAAgBD,CAAhB,EAAmBE,aAAhC;AACH;AACF;AACF;;AACD/B,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAK,MAAAA,YAAY,CAACqB,IAAD,CAAZ;AACD,KAfH;AAgBD,GA/BQ,EA+BN,EA/BM,CAAT;AAiCA;;;;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ;AACA4B,EAAAA,OAAO,CAACC,GAAR,CAAYnC,OAAZ;;AAGA,MAAMoC,UAAU,GAAG,SAAbA,UAAa,CAAAC,MAAM,EAAI;AAC3B,SAAK,IAAIV,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC3B,OAAO,CAAC4B,MAAxB,EAAgCD,CAAC,EAAjC;AACE,UAAI3B,OAAO,CAAC2B,CAAD,CAAP,KAAaU,MAAjB,EAAyB,OAAO,IAAP;AAD3B;;AAEA,WAAO,KAAP;AACD,GAJD;;AAMA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAExC,QAAMC,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,CADE;AAEVC,MAAAA,MAAM,EAAEC,MAAM,CAAC7C,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,MAApB,CAFJ;AAGVe,MAAAA,MAAM,EAAEjC,SAAS,CAACmC,KAAD,CAAT,CAAiBF,MAHf;AAIVQ,MAAAA,OAAO,EAAEzC,SAAS,CAACmC,KAAD,CAAT,CAAiBR,OAAjB,CAAyBS,KAAK,GAAC,CAA/B,EAAkCK;AAJjC,KAAZ;AAMA,QAAIC,OAAO,GAAGxC,OAAO,CAACyC,KAAR,EAAd;AACAD,IAAAA,OAAO,CAACP,KAAD,CAAP,GAAiBE,GAAjB;AACAlC,IAAAA,UAAU,CAACuC,OAAD,CAAV,CAVwC,CAWxC;;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ,EAZwC,CAcxC;;AACA,QAAI0C,KAAK,GAAGhD,OAAO,CAAC+C,KAAR,EAAZ;;AACA,QAAI7C,UAAU,CAACqC,KAAD,CAAd,EAAuB;AACrB,UAAIU,IAAG,GAAG7C,SAAS,CAACmC,KAAD,CAAT,CAAiBR,OAAjB,CAAyB7B,UAAU,CAACqC,KAAD,CAAV,GAAkB,CAA3C,EAA8CP,aAAxD;;AACA,UAAIiB,IAAJ,EAAS;AACPD,QAAAA,KAAK,CAACE,OAAN,CAAcD,IAAd;AACAhD,QAAAA,UAAU,CAAC+C,KAAD,CAAV;AACD;AACF,KAtBuC,CAwBxC;;;AACA,QAAIG,GAAG,GAAGjD,UAAU,CAAC6C,KAAX,EAAV;AACAI,IAAAA,GAAG,CAACZ,KAAD,CAAH,GAAaC,KAAb;AACArC,IAAAA,aAAa,CAACgD,GAAD,CAAb,CA3BwC,CA6BxC;;AACA,QAAIF,GAAG,GAAG7C,SAAS,CAACmC,KAAD,CAAT,CAAiBR,OAAjB,CAAyBS,KAAK,GAAC,CAA/B,EAAkCR,aAA5C;;AACA,QAAIiB,GAAJ,EAAS;AACP,WAAK,IAAItB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACqB,KAAK,CAACpB,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,YAAIqB,KAAK,CAACrB,CAAD,CAAL,IAAYsB,GAAhB,EAAqB;AACnBD,UAAAA,KAAK,CAACI,MAAN,CAAazB,CAAb,EAAgB,CAAhB;AACA,YAAEA,CAAF;AACD;AACF;;AACD1B,MAAAA,UAAU,CAAC+C,KAAD,CAAV;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD;;AACDd,IAAAA,OAAO,CAACC,GAAR,CAAYjC,UAAZ;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAYnC,OAAZ;AACD,GA3CD;;AA6CA,MAAMqD,YAAY,GAAG,SAAfA,YAAe,CAACd,KAAD,EAAQe,OAAR,EAAoB;AACvC,QAAMb,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,CADE;AAEVC,MAAAA,MAAM,EAAEC,MAAM,CAAC7C,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,MAApB,CAFJ;AAGVe,MAAAA,MAAM,EAAEjC,SAAS,CAACmC,KAAD,CAAT,CAAiBF,MAHf;AAIVQ,MAAAA,OAAO,EAAES;AAJC,KAAZ;AAMA,QAAIR,OAAO,GAAGxC,OAAO,CAACyC,KAAR,EAAd;AACAD,IAAAA,OAAO,CAACP,KAAD,CAAP,GAAiBE,GAAjB;AACAlC,IAAAA,UAAU,CAACuC,OAAD,CAAV;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY7B,OAAZ;AACD,GAXD;;AAaA,MAAMiD,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIC,IAAI,GAAGlD,OAAO,CAACyC,KAAR,EAAX,CADyB,CAEzB;;AACA,SAAK,IAAIpB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC3B,OAAO,CAAC4B,MAAxB,EAAgCD,CAAC,EAAjC;AACE6B,MAAAA,IAAI,CAACxD,OAAO,CAAC2B,CAAD,CAAP,GAAW,CAAZ,CAAJ,GAAqB,IAArB;AADF,KAHyB,CAKzB;;;AACA,QAAI8B,QAAQ,GAAG,EAAf;;AANyB,+CAOZD,IAPY;AAAA;;AAAA;AAOzB;AAAA,YAAQ7B,EAAR;AACEA,QAAAA,EAAC,IAAI8B,QAAQ,CAACxB,IAAT,CAAcN,EAAd,CAAL;AADF;AAPyB;AAAA;AAAA;AAAA;AAAA;;AAUzBO,IAAAA,OAAO,CAACC,GAAR,CAAYsB,QAAZ;AAEA,QAAI3C,OAAO,GAAG,IAAIC,OAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,gCAA/B;AACA,QAAM0C,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAArB;AACA,QAAMI,YAAY,GAAG;AACnB3C,MAAAA,MAAM,EAAE,MADW;AAEnBJ,MAAAA,OAAO,EAAEA,OAFU;AAGnBgD,MAAAA,IAAI,EAAEJ;AAHa,KAArB;AAKAvC,IAAAA,KAAK,yBAAkBpB,KAAK,CAACqB,KAAN,CAAYC,MAAZ,CAAmBC,MAArC,GAA+CuC,YAA/C,CAAL,CACGtC,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAG,IAAI;AAAA,aAAIQ,OAAO,CAACC,GAAR,CAAY,oBAAkBT,IAA9B,CAAJ;AAAA,KAFZ;AAID,GAxBD;;AA0BA,MAAMqC,cAAc,GAAG,SAAjBA,cAAiB,GAAM,CAAE,CAA/B;;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,UAAU,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvD,KADH,CADF,CADF,CADF,EASIJ,SAAS,CAAC4D,GAAV,CAAc,UAACC,CAAD,EAAI1B,KAAJ,EAAc;AAC1B,QAAIH,UAAU,CAAC6B,CAAC,CAAC5B,MAAH,CAAd,EAA0B,OAAO,IAAP;AAC1B,wBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACA,MAAA,KAAK,EAAEA,KADP;AAEA,MAAA,KAAK,EAAI0B,CAFT;AAGA,MAAA,eAAe,EAAI3B,eAHnB;AAIA,MAAA,MAAM,EAAIe,YAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD,GAXD,CATJ,eAsBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACA,IAAA,OAAO,EAAG,WADV;AAEA,IAAA,KAAK,EAAG,SAFR;AAGA,IAAA,OAAO,EAAIE,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAtBF,CADF,CADF;AAoCD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Question from \"../components/Question\";\r\nimport { Grid, Typography, Button, Paper } from '@material-ui/core';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function Survey(props) {\r\n\r\n\r\n\r\n  const [cascade, setCascade] = useState([]); //记录被级联的问题id，在表里的不显示\r\n  const [oldOptions, setOldOptions] = useState([]);//保存选项改变时的前一个值，从而恢复前一个值引发的级联状态变化\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [cookies] = useCookies();\r\n\r\n\r\n  useEffect(() => {\r\n    //检查是否登录\r\n    if (cookies.mail==null) return props.history.replace(\"/login\");\r\n\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n    const init = {\r\n      method: 'GET',\r\n      headers: headers\r\n    };\r\n    //fetch 获取 title\r\n    fetch(`/api/title/${props.match.params.survid}`, init)\r\n      .then(res => res.json())\r\n      .then(data => setTitle(data[0]));\r\n    //fetch 获取 questions\r\n    fetch(`/api/questions/${props.match.params.survid}`, init)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        //提取cascade表\r\n        let cascade=[];\r\n        for (let i=0; i<data.length; i++){\r\n          if (data[i].type===\"mc\") {\r\n            for (let j=0; j<data[i].options.length; j++) {\r\n              if (data[i].options[j].cascadeQstnId)\r\n                cascade.push(data[i].options[j].cascadeQstnId);\r\n            }\r\n          }\r\n        }\r\n        setCascade(cascade);\r\n        setQuestions(data);\r\n      });\r\n  }, []);\r\n\r\n  /**\r\n   * front end test\r\n   */\r\n  console.log(answers);\r\n  console.log(cascade);\r\n  \r\n\r\n  const isCascaded = qstnId => {\r\n    for (let i=0; i<cascade.length; i++)\r\n      if (cascade[i]===qstnId) return true;\r\n    return false;\r\n  }\r\n\r\n  const updateOptAnswer = (index, optId) => {\r\n\r\n    const ans = {\r\n      respId: 0,\r\n      formId: Number(props.match.params.survid),\r\n      qstnId: questions[index].qstnId,\r\n      content: questions[index].options[optId-1].content\r\n    };\r\n    let tempAns = answers.slice();\r\n    tempAns[index] = ans;\r\n    setAnswers(tempAns);\r\n    //test\r\n    console.log(answers);\r\n\r\n    //旧选项如果有级联，则改变后将级联id加回级联状态表\r\n    let cList = cascade.slice();\r\n    if (oldOptions[index]) {\r\n      let cId = questions[index].options[oldOptions[index]-1].cascadeQstnId;\r\n      if (cId) {\r\n        cList.unshift(cId);\r\n        setCascade(cList);\r\n      }\r\n    }\r\n\r\n    //更新旧选项表\r\n    let old = oldOptions.slice();\r\n    old[index] = optId;\r\n    setOldOptions(old);\r\n\r\n    //新的当前选项如果有级联，则在级联状态表删除掉所有该id\r\n    let cId = questions[index].options[optId-1].cascadeQstnId;\r\n    if (cId) {   \r\n      for (let i=0; i<cList.length; i++) {\r\n        if (cList[i] == cId) {\r\n          cList.splice(i, 1);\r\n          --i;\r\n        }\r\n      }\r\n      setCascade(cList);\r\n      console.log(cList);\r\n    }\r\n    console.log(oldOptions);\r\n    console.log(cascade);\r\n  }\r\n\r\n  const updateAnswer = (index, ansCont) => {\r\n    const ans = {\r\n      respId: 0,\r\n      formId: Number(props.match.params.survid),\r\n      qstnId: questions[index].qstnId,\r\n      content: ansCont\r\n    };\r\n    let tempAns = answers.slice();\r\n    tempAns[index] = ans;\r\n    setAnswers(tempAns);\r\n    console.log(answers);\r\n  }\r\n\r\n  const handleSubmig = () => {\r\n    let temp = answers.slice();\r\n    //将因级联不显示的问题答案置为空\r\n    for (let i=0; i<cascade.length; i++)\r\n      temp[cascade[i]-1] = null;\r\n    //将非空元素统一放入response数组中\r\n    let response = [];\r\n    for(let i of temp)\r\n      i && response.push(i);\r\n    \r\n    console.log(response);\r\n\r\n    let headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n    const responseBody = JSON.stringify(response);\r\n    const responseInit = {\r\n      method: 'POST',\r\n      headers: headers, \r\n      body: responseBody\r\n    };\r\n    fetch(`/api/response/${props.match.params.survid}`, responseInit)\r\n      .then(res => res.json())\r\n      .then(data => console.log(\"post response: \"+data));\r\n    \r\n  }\r\n\r\n  const submitResponse = () => {}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container direction=\"column\" alignItems=\"center\" >\r\n        <Grid item>\r\n          <Paper>\r\n            <Typography>\r\n              {title}\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        {\r\n          questions.map((q, index) => {\r\n            if (isCascaded(q.qstnId)) return null;\r\n            return (\r\n              <Grid item key={index}>\r\n                <Question \r\n                index={index}\r\n                qInfo = {q}\r\n                updateOptAnswer = {updateOptAnswer}\r\n                update = {updateAnswer} />\r\n              </Grid>\r\n            );\r\n          })\r\n        }\r\n        <Grid item>\r\n          <Button\r\n          variant = \"contained\"\r\n          color = \"primary\"\r\n          onClick = {handleSubmig} >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}