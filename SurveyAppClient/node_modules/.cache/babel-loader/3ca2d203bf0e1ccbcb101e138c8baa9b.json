{"ast":null,"code":"import _toConsumableArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\McQuestion.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Grid, TextField, Button } from \"@material-ui/core\";\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport styles from \"../styles/QuestionStyle\";\nvar useStyles = makeStyles(styles);\n\nfunction Option(props) {\n  var _useState = useState(props.option),\n      _useState2 = _slicedToArray(_useState, 2),\n      opt = _useState2[0],\n      setOpt = _useState2[1];\n\n  var updateOptName = function updateOptName(e) {\n    var newOpt = opt;\n    newOpt['name'] = e.target.value;\n    setOpt(newOpt);\n    props.updateOption(props.index, opt);\n  };\n\n  var updateOptCascade = function updateOptCascade(e) {\n    var newOpt = opt;\n    newOpt['cascdeIndex'] = e.target.value;\n    setOpt(newOpt);\n    props.updateOption(props.index, opt);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"option \" + (props.index + 1),\n    onBlur: updateOptName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"jump to\",\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: updateOptCascade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n} //multi choices\n\n\nexport default function McQuestion(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState3 = useState(props.qInfo.options),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var updateOptions = function updateOptions(index, opt) {\n    // let newOptions = options;\n    // newOptions[index] = opt;\n    // setOptions(newOptions);\n    props.updateOpt(options);\n  };\n\n  var addOption = function addOption(e) {\n    setOptions([].concat(_toConsumableArray(options), [{\n      name: '',\n      cascadeIndex: -1\n    }]));\n    console.log(options);\n    props.updateOpt(options);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, options.map(function (opt, index) {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: index,\n      index: index,\n      option: opt,\n      updateOption: updateOptions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: addOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Add Option\"));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/McQuestion.js"],"names":["React","useState","makeStyles","Grid","TextField","Button","RadioButtonUncheckedIcon","styles","useStyles","Option","props","option","opt","setOpt","updateOptName","e","newOpt","target","value","updateOption","index","updateOptCascade","shrink","McQuestion","classes","qInfo","options","setOptions","updateOptions","updateOpt","addOption","name","cascadeIndex","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles, Grid, TextField, Button } from \"@material-ui/core\";\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nfunction Option(props) {\r\n\r\n  const [opt, setOpt] = useState(props.option);\r\n\r\n  const updateOptName = e => {\r\n    let newOpt = opt;\r\n    newOpt['name'] = e.target.value;\r\n    setOpt(newOpt);\r\n    props.updateOption(props.index, opt);\r\n  }\r\n\r\n  const updateOptCascade = e => {\r\n    let newOpt = opt;\r\n    newOpt['cascdeIndex'] = e.target.value;\r\n    setOpt(newOpt);\r\n    props.updateOption(props.index, opt);\r\n  }\r\n\r\n  return (\r\n    \r\n    <Grid container direction=\"row\" >\r\n      <Grid item>\r\n        <RadioButtonUncheckedIcon />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField \r\n        label={\"option \"+(props.index+1)}\r\n        onBlur={updateOptName}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          label=\"jump to\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onBlur={updateOptCascade}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n//multi choices\r\nexport default function McQuestion (props) {\r\n\r\n  const classes = useStyles();\r\n  const [options, setOptions] = useState(props.qInfo.options);\r\n\r\n  const updateOptions = (index, opt) =>{\r\n    // let newOptions = options;\r\n    // newOptions[index] = opt;\r\n    // setOptions(newOptions);\r\n    props.updateOpt(options);\r\n  }\r\n\r\n  const addOption = e => {\r\n    setOptions([...options, {name:'', cascadeIndex: -1}]);\r\n    console.log(options);\r\n    props.updateOpt(options);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        options.map(\r\n          (opt, index) => (\r\n            <Option \r\n            key={index} \r\n            index={index} \r\n            option={opt} \r\n            updateOption={updateOptions}\r\n            />\r\n        ))\r\n      }\r\n      <Button color=\"primary\" onClick={addOption}>Add Option</Button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}