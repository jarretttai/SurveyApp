{"ast":null,"code":"import _toConsumableArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\views\\\\SurveyEdit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, Typography, Toolbar, Grid, Paper, TextField, Button } from \"@material-ui/core\";\nimport styles from \"../styles/SurveyEditPageStyle\";\nimport AppHeader from \"../components/AppHeader\";\nimport AppDrawer from \"../components/AppDrawer\";\nimport Question from \"../components/Question\";\nvar useStyles = makeStyles(styles);\nexport default function EditSurveyPage(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      drawerOpen = _useState2[0],\n      setDrawerOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      questions = _useState6[0],\n      setQuestions = _useState6[1]; //console.log(questions);\n\n\n  useEffect(function () {\n    var headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\n    var init = {\n      method: 'GET',\n      headers: headers\n    };\n    fetch(\"/api/questions/\".concat(props.match.params.survid), init).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setQuestions(data);\n    });\n  }, []);\n\n  var handleDrawerOpen = function handleDrawerOpen(e) {\n    setDrawerOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose(e) {\n    setDrawerOpen(false);\n  };\n\n  var updateTitle = function updateTitle(e) {\n    setTitle(e.target.value);\n  };\n\n  var addQuestion = function addQuestion(e) {\n    setQuestions([].concat(_toConsumableArray(questions), [{\n      type: 'mc',\n      content: '',\n      options: [{\n        name: '',\n        cascadeIndex: ''\n      }, {\n        name: '',\n        cascadeIndex: ''\n      }]\n    }]));\n  };\n\n  var updateQuestion = function updateQuestion(index, info) {\n    // console.log(index);\n    // console.log(info);\n    var newQuestions = questions.slice();\n    newQuestions[index] = info;\n    setQuestions(newQuestions);\n    console.log(questions);\n  };\n\n  var deleteQuestion = function deleteQuestion(index) {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    handleDrawerOpen: handleDrawerOpen,\n    drawerOpen: drawerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppDrawer, {\n    open: drawerOpen,\n    handleDrawerClose: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 1,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.saveButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"save\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addQuestion,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"+  new question\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 1,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.titlePaper,\n    elevation: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.title,\n    label: \"Title of Survey \",\n    inputProps: {\n      style: {\n        fontSize: 30\n      }\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 20\n      }\n    },\n    onChange: updateTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, questions.map(function (q, index) {\n    return /*#__PURE__*/React.createElement(Question, {\n      key: index,\n      index: index,\n      qInfo: q,\n      update: updateQuestion,\n      delete: deleteQuestion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/views/SurveyEdit.js"],"names":["React","useState","useEffect","makeStyles","Typography","Toolbar","Grid","Paper","TextField","Button","styles","AppHeader","AppDrawer","Question","useStyles","EditSurveyPage","props","classes","drawerOpen","setDrawerOpen","title","setTitle","questions","setQuestions","headers","Headers","append","init","method","fetch","match","params","survid","then","res","json","data","handleDrawerOpen","e","handleDrawerClose","updateTitle","target","value","addQuestion","type","content","options","name","cascadeIndex","updateQuestion","index","info","newQuestions","slice","console","log","deleteQuestion","saveButton","titlePaper","style","fontSize","map","q"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { makeStyles, Typography, Toolbar, Grid, Paper, TextField, Button } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from \"../styles/SurveyEditPageStyle\";\r\n\r\nimport AppHeader from \"../components/AppHeader\";\r\nimport AppDrawer from \"../components/AppDrawer\";\r\nimport Question from \"../components/Question\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function EditSurveyPage(props) {\r\n\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  //console.log(questions);\r\n\r\n  useEffect(\r\n    () => {\r\n      let headers = new Headers();\r\n      headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n      const init = {\r\n        method: 'GET',\r\n        headers: headers\r\n      };\r\n      fetch(`/api/questions/${props.match.params.survid}`, init)\r\n        .then(res => res.json())\r\n        .then(data => setQuestions(data));\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleDrawerOpen = (e) => {\r\n    setDrawerOpen(true);\r\n  }\r\n  \r\n  const handleDrawerClose = e => {\r\n    setDrawerOpen(false);\r\n  }\r\n\r\n  const updateTitle = e => {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  const addQuestion = e => {\r\n    setQuestions([\r\n      ...questions, \r\n      { \r\n        type: 'mc', \r\n        content: '', \r\n        options: [\r\n          {name: '', cascadeIndex: ''},\r\n          {name: '', cascadeIndex: ''}\r\n        ]\r\n      }\r\n    ]);\r\n  }\r\n\r\n  const updateQuestion = (index, info) => {\r\n    // console.log(index);\r\n    // console.log(info);\r\n    let newQuestions = questions.slice();\r\n    newQuestions[index] = info;\r\n    setQuestions(newQuestions);\r\n    console.log(questions);\r\n  }\r\n\r\n  const deleteQuestion = (index) => {\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <AppHeader handleDrawerOpen={handleDrawerOpen} drawerOpen={drawerOpen} />\r\n      <AppDrawer open={drawerOpen} handleDrawerClose={handleDrawerClose} />\r\n      <Toolbar />\r\n\r\n      <Grid container direction=\"row\" alignItems=\"flex-start\">\r\n        <Grid item sm={1} md={3}></Grid>\r\n        <Grid item className={classes.saveButton} >\r\n          <Button \r\n          variant=\"contained\" \r\n          size=\"small\" \r\n          color=\"primary\">\r\n            save\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button \r\n          onClick={addQuestion}\r\n          variant=\"contained\" \r\n          size=\"small\" \r\n          color=\"primary\">\r\n            +  new question\r\n          </Button> \r\n        </Grid>\r\n        <Grid item sm={1} md={3}></Grid>\r\n      </Grid>\r\n      \r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Grid item sm={6} md={6}>\r\n          <Paper className={classes.titlePaper} elevation={5}>\r\n            <TextField \r\n            className={classes.title} \r\n            label=\"Title of Survey \" \r\n            inputProps={{style: {fontSize: 30}}}\r\n            InputLabelProps={{style: {fontSize: 20}}}\r\n            onChange={updateTitle}/>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item sm={6} md={6}>\r\n        {\r\n          questions.map( \r\n            (q, index) => (\r\n              <Question \r\n              key={index} \r\n              index={index}\r\n              qInfo={q} \r\n              update={updateQuestion}\r\n              delete={deleteQuestion}/>\r\n          ))\r\n        }\r\n        </Grid>\r\n      </Grid>\r\n      \r\n\r\n    </React.Fragment>\r\n  )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}