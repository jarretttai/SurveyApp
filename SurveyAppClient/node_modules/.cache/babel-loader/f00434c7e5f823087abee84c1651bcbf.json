{"ast":null,"code":"import _toConsumableArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\Question.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Paper, Grid, Select, MenuItem, TextField, IconButton, Button } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styles from \"../styles/QuestionStyle\";\nimport McQuestion from \"./McQuestion\";\nimport CbQuestion from \"./CbQuestion\";\nimport TextQuestion from \"./TextQuestion\";\nimport NumQuestion from \"./NumQuestion\";\nimport ScaleQuestion from \"./ScaleQuestion\";\nvar useStyles = makeStyles(styles);\nexport default function Question(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState(props.qInfo),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectorOpen = _useState4[0],\n      setSelectorOpen = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setSelectorOpen(false);\n  };\n\n  var handleOpen = function handleOpen() {\n    setSelectorOpen(true);\n  };\n\n  var handleTypeChange = function handleTypeChange(e) {\n    var newInfo = info;\n    newInfo['type'] = e.target.value;\n    setInfo(newInfo);\n    props.update(props.index, info);\n  };\n\n  var handleContChange = function handleContChange(e) {\n    var newInfo = info;\n    newInfo['content'] = e.target.value;\n    setInfo(newInfo);\n    console.log(info);\n    props.update(props.index, info);\n  };\n\n  var handleOptChange = function handleOptChange(options) {\n    var newInfo = info;\n    newInfo['options'] = options;\n    setInfo(newInfo);\n    props.update(props.index, info); // console.log(info['options']);\n  };\n\n  var addOptions = function addOptions(e) {\n    var newInfo = info;\n    newInfo['options'] = [].concat(_toConsumableArray(info['options']), [{\n      formId: props.qInfo.formId,\n      qstnId: props.qInfo.qstnId,\n      opt_id: info['options'].length + 1,\n      name: '',\n      cascadeQstnId: ''\n    }]);\n    setInfo(newInfo);\n    console.log(info['options']);\n    props.update(props.index, info);\n  };\n\n  var deleteQuestion = function deleteQuestion(e) {\n    props.delete(props.index);\n  };\n\n  var showButton = function showButton(e) {\n    if (info.type === \"mc\" || info.type === \"cb\") {\n      return /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: addOptions,\n        className: classes.optionAddButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, \"Add Option\");\n    }\n  };\n\n  var getMainArea = function getMainArea() {\n    // console.log(\"inGETMAINAREA\");\n    // console.log(info);\n    if (info.type === \"mc\") return /*#__PURE__*/React.createElement(McQuestion, {\n      qInfo: info,\n      updateOpt: handleOptChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 34\n      }\n    });else if (info.type === \"cb\") return /*#__PURE__*/React.createElement(CbQuestion, {\n      qInfo: info,\n      updateOpt: handleOptChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 40\n      }\n    });else if (info.type === \"text\") return /*#__PURE__*/React.createElement(TextQuestion, {\n      qInfo: info,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 42\n      }\n    });else if (info.type === \"intNum\" || info.type === \"realNum\") return /*#__PURE__*/React.createElement(NumQuestion, {\n      qInfo: info,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 70\n      }\n    });else if (info.type === \"scale\") return /*#__PURE__*/React.createElement(ScaleQuestion, {\n      qInfo: info,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 42\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.questionPaper,\n    elevation: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.mainArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"question \" + (props.index + 1),\n    variant: \"filled\",\n    onBlur: handleContChange,\n    className: classes.contentInput,\n    defaultValue: info.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: classes.typeSelector,\n    open: selectorOpen,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: props.qInfo.type,\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"mc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Multiple Choice\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Checkboxes\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"intNum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Integer\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"realNum\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Real Number\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"scale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"Linear Scale\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, getMainArea()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, showButton()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.deleteQuestionButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: deleteQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })))))));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/Question.js"],"names":["React","useState","makeStyles","Paper","Grid","Select","MenuItem","TextField","IconButton","Button","DeleteIcon","styles","McQuestion","CbQuestion","TextQuestion","NumQuestion","ScaleQuestion","useStyles","Question","props","classes","qInfo","info","setInfo","selectorOpen","setSelectorOpen","handleClose","handleOpen","handleTypeChange","e","newInfo","target","value","update","index","handleContChange","console","log","handleOptChange","options","addOptions","formId","qstnId","opt_id","length","name","cascadeQstnId","deleteQuestion","delete","showButton","type","optionAddButton","getMainArea","questionPaper","mainArea","contentInput","content","typeSelector","flexGrow","deleteQuestionButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles, Paper, Grid, Select, MenuItem, TextField, IconButton, Button } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\nimport McQuestion from \"./McQuestion\";\r\nimport CbQuestion from \"./CbQuestion\";\r\nimport TextQuestion from \"./TextQuestion\";\r\nimport NumQuestion from \"./NumQuestion\";\r\nimport ScaleQuestion from \"./ScaleQuestion\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function Question(props) {\r\n\r\n  const classes = useStyles();\r\n  const [info, setInfo] = useState(props.qInfo);\r\n  const [selectorOpen, setSelectorOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setSelectorOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setSelectorOpen(true);\r\n  };\r\n\r\n  const handleTypeChange = e => {\r\n    let newInfo = info;\r\n    newInfo['type'] = e.target.value;\r\n    setInfo(newInfo);\r\n    props.update(props.index, info);\r\n  }\r\n\r\n  const handleContChange = e => {\r\n    let newInfo = info;\r\n    newInfo['content'] = e.target.value;\r\n    setInfo(newInfo);\r\n    console.log(info);\r\n    props.update(props.index, info);\r\n  }\r\n\r\n  const handleOptChange = options => {\r\n    let newInfo = info;\r\n    newInfo['options'] = options;\r\n    setInfo(newInfo);\r\n    props.update(props.index, info);\r\n    // console.log(info['options']);\r\n  }\r\n\r\n  const addOptions = e => {\r\n    let newInfo = info;\r\n    newInfo['options'] = [\r\n      ...info['options'], \r\n      {\r\n        formId: props.qInfo.formId, \r\n        qstnId: props.qInfo.qstnId,\r\n        opt_id: info['options'].length+1, \r\n        name:'', \r\n        cascadeQstnId: ''\r\n    }];\r\n    setInfo(newInfo);\r\n    console.log(info['options']);\r\n    props.update(props.index, info);\r\n  }\r\n\r\n  const deleteQuestion = e => {\r\n    props.delete(props.index);\r\n  }\r\n\r\n  const showButton = e => {\r\n    if (info.type===\"mc\"||info.type===\"cb\"){\r\n      return (\r\n        <Button color=\"primary\" onClick={addOptions} className={classes.optionAddButton}>\r\n          Add Option\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  const getMainArea = () => {\r\n    // console.log(\"inGETMAINAREA\");\r\n    // console.log(info);\r\n    if (info.type===\"mc\") return <McQuestion qInfo={info} updateOpt={handleOptChange}/>;\r\n    else if (info.type===\"cb\")  return <CbQuestion qInfo={info} updateOpt={handleOptChange}/>;\r\n    else if (info.type===\"text\")  return <TextQuestion qInfo={info} />;\r\n    else if (info.type===\"intNum\" || info.type===\"realNum\")   return <NumQuestion qInfo={info} />;\r\n    else if (info.type===\"scale\") return <ScaleQuestion qInfo={info} />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.questionPaper} elevation={5}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item container direction=\"row\" alignItems=\"flex-start\">\r\n            <Grid item className={classes.mainArea}>\r\n                <TextField\r\n                label={\"question \"+(props.index+1)}\r\n                variant=\"filled\"\r\n                onBlur={handleContChange}\r\n                className={classes.contentInput}\r\n                defaultValue={info.content} >\r\n                </TextField>\r\n            </Grid>\r\n            <Grid item >\r\n              <Select\r\n              className={classes.typeSelector}\r\n              open={selectorOpen}\r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={props.qInfo.type}\r\n              onChange={handleTypeChange}>\r\n              <MenuItem value={\"mc\"}>Multiple Choice</MenuItem>\r\n              <MenuItem value={\"cb\"}>Checkboxes</MenuItem>\r\n              <MenuItem value={\"text\"}>Text</MenuItem>\r\n              <MenuItem value={\"intNum\"}>Integer</MenuItem>\r\n              <MenuItem value={\"realNum\"}>Real Number</MenuItem>\r\n              <MenuItem value={\"scale\"}>Linear Scale</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            {getMainArea()}\r\n          </Grid>\r\n          <Grid item container direction=\"row\">\r\n            <Grid item style={{flexGrow: 1}}>\r\n              {showButton()}\r\n            </Grid>\r\n            <Grid item className={classes.deleteQuestionButton}>\r\n              <IconButton onClick={deleteQuestion}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n      </Paper>\r\n      \r\n        \r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}