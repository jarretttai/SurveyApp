{"ast":null,"code":"import _slicedToArray from \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\src\\\\SurveyApp\\\\SurveyAppClient\\\\src\\\\components\\\\Question.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Paper, Grid, Select, MenuItem, TextField } from \"@material-ui/core\";\nimport styles from \"../styles/QuestionStyle\";\nimport McQuestion from \"./McQuestion\";\nimport CbQuestion from \"./CbQuestion\";\nimport TextQuestion from \"./TextQuestion\";\nimport NumQuestion from \"./NumQuestion\";\nimport ScaleQuestion from \"./ScaleQuestion\";\nvar useStyles = makeStyles(styles);\nexport default function Question(props) {\n  var classes = useStyles();\n\n  var _useState = useState(props.qInfo),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectorOpen = _useState4[0],\n      setSelectorOpen = _useState4[1]; //console.log(info);\n\n\n  var handleClose = function handleClose() {\n    setSelectorOpen(false);\n  };\n\n  var handleOpen = function handleOpen() {\n    setSelectorOpen(true);\n  };\n\n  var handleTypeChange = function handleTypeChange(e) {\n    var newInfo = info;\n    newInfo['type'] = e.target.value;\n    setInfo(newInfo);\n    props.update();\n  };\n\n  var handleContChange = function handleContChange(e) {\n    var newInfo = info;\n    newInfo['content'] = e.target.value;\n    setInfo(newInfo);\n    props.update();\n  };\n\n  var question;\n  if (info.type === \"mc\") question = /*#__PURE__*/React.createElement(McQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 36\n    }\n  });else if (info.type === \"cb\") question = /*#__PURE__*/React.createElement(CbQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 42\n    }\n  });else if (info.type === \"text\") question = /*#__PURE__*/React.createElement(TextQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }\n  });else if (info.type === \"num\") question = /*#__PURE__*/React.createElement(NumQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 44\n    }\n  });else if (info.type === \"scale\") question = /*#__PURE__*/React.createElement(ScaleQuestion, {\n    qInfo: info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 44\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.questionPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.mainArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"question \" + (props.index + 1),\n    variant: \"filled\",\n    onBlur: handleContChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), question), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    open: selectorOpen,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    value: info.type,\n    onChange: handleTypeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"mc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Multiple Choice\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Checkboxes\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"num\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Number\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"scale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Linear Scale\")))))));\n}","map":{"version":3,"sources":["D:/src/SurveyApp/SurveyAppClient/src/components/Question.js"],"names":["React","useState","makeStyles","Paper","Grid","Select","MenuItem","TextField","styles","McQuestion","CbQuestion","TextQuestion","NumQuestion","ScaleQuestion","useStyles","Question","props","classes","qInfo","info","setInfo","selectorOpen","setSelectorOpen","handleClose","handleOpen","handleTypeChange","e","newInfo","target","value","update","handleContChange","question","type","questionPaper","mainArea","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles, Paper, Grid, Select, MenuItem, TextField } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from \"../styles/QuestionStyle\";\r\nimport McQuestion from \"./McQuestion\";\r\nimport CbQuestion from \"./CbQuestion\";\r\nimport TextQuestion from \"./TextQuestion\";\r\nimport NumQuestion from \"./NumQuestion\";\r\nimport ScaleQuestion from \"./ScaleQuestion\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nexport default function Question(props) {\r\n\r\n  const classes = useStyles();\r\n  const [info, setInfo] = useState(props.qInfo);\r\n  const [selectorOpen, setSelectorOpen] = useState(false);\r\n\r\n  //console.log(info);\r\n\r\n  const handleClose = () => {\r\n    setSelectorOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setSelectorOpen(true);\r\n  };\r\n\r\n  const handleTypeChange = e => {\r\n    let newInfo = info;\r\n    newInfo['type'] = e.target.value;\r\n    setInfo(newInfo);\r\n    props.update();\r\n  }\r\n\r\n  const handleContChange = e => {\r\n    let newInfo = info;\r\n    newInfo['content'] = e.target.value;\r\n    setInfo(newInfo);\r\n    props.update();\r\n  }\r\n\r\n  let question;\r\n  if (info.type===\"mc\") question = <McQuestion qInfo={info} />;\r\n  else if (info.type===\"cb\")  question = <CbQuestion qInfo={info} />;\r\n  else if (info.type===\"text\")  question = <TextQuestion qInfo={info} />;\r\n  else if (info.type===\"num\")   question = <NumQuestion qInfo={info} />;\r\n  else if (info.type===\"scale\") question = <ScaleQuestion qInfo={info} />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.questionPaper}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item container direction=\"row\" alignItems=\"flex-start\">\r\n            <Grid item className={classes.mainArea}>\r\n                <TextField\r\n                label={\"question \"+(props.index+1)}\r\n                variant=\"filled\"\r\n                onBlur={handleContChange}>\r\n                </TextField>\r\n\r\n                {question}\r\n\r\n            </Grid>\r\n            <Grid item >\r\n              <Select\r\n              open={selectorOpen}\r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={info.type}\r\n              onChange={handleTypeChange}>\r\n              <MenuItem value={\"mc\"}>Multiple Choice</MenuItem>\r\n              <MenuItem value={\"cb\"}>Checkboxes</MenuItem>\r\n              <MenuItem value={\"text\"}>Text</MenuItem>\r\n              <MenuItem value={\"num\"}>Number</MenuItem>\r\n              <MenuItem value={\"scale\"}>Linear Scale</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n      </Paper>\r\n      \r\n        \r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}